{"ast":null,"code":"var _jsxFileName = \"D:\\\\ai_chat\\\\react-workspace\\\\blogfriday\\\\src\\\\components\\\\chat\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./Chat.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { chatActions } from \"../../toolkit/actions/chat_Action\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Chat() {\n  _s();\n  const [webSocket, setWebSocket] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState(\"\");\n  const [userId, setUserId] = useState(\"CCC\");\n  const [recipientId, setRecipientId] = useState(\"\");\n  const [view, setView] = useState(0); // 추가: 화면 상태 (0: 친구 목록, 1: 채팅)\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const connect = () => {\n    if (!webSocket || webSocket.readyState === WebSocket.CLOSED) {\n      const ws = new WebSocket(`ws://localhost:8090/ws/chat?userId=${userId}`);\n      ws.onopen = () => console.log(\"Connected to the chat server\");\n      ws.onmessage = event => {\n        const message = JSON.parse(event.data);\n        setMessages(prevMessages => [...prevMessages, message]);\n      };\n      ws.onerror = event => console.error(\"WebSocket error:\", event);\n      ws.onclose = event => console.log(\"WebSocket connection closed:\", event);\n      setWebSocket(ws);\n    } else {\n      console.log(\"WebSocket is already connected or connecting.\");\n    }\n  };\n  const sendMessage = () => {\n    if (webSocket && inputMessage !== \"\" && userId !== \"\" && recipientId !== \"\") {\n      const messageData = {\n        sender_id: userId,\n        message: inputMessage,\n        recipient_id: recipientId\n      };\n      webSocket.send(JSON.stringify(messageData));\n      setMessages(prevMessages => [...prevMessages, messageData]);\n      setInputMessage(\"\");\n    }\n  };\n  const disconnect = () => {\n    if (webSocket) {\n      webSocket.close();\n    }\n  };\n  const {\n    friendList\n  } = useSelector(state => state.chat);\n  const [userCode, setUserCode] = useState({\n    user_code1: userId,\n    user_code2: \"\"\n  });\n  const navihome = () => {\n    navigate(\"/chat/home\");\n  };\n  useEffect(() => {\n    connect();\n    dispatch(chatActions.getFriendList(userCode.user_code1));\n  }, [userCode]);\n\n  ///\n\n  const [showOptions, setShowOptions] = useState(false);\n  const [optionsPosition, setOptionsPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const [selectedMessage, setSelectedMessage] = useState(null);\n  // 메시지 클릭 시 동작할 핸들러\n  const handleMsgClick = (msg, event) => {\n    event.stopPropagation(); // 상위로 이벤트 전파 방지\n    const x = event.clientX;\n    const y = event.clientY;\n    setOptionsPosition({\n      x,\n      y\n    });\n    setShowOptions(true);\n    setSelectedMessage(msg);\n  };\n  const hiddenDivStyle = {\n    position: \"absolute\",\n    left: `${optionsPosition.x}px`,\n    top: `${optionsPosition.y}px`,\n    display: showOptions ? \"block\" : \"none\"\n    // 추가 스타일 설정\n  };\n\n  // 숨겨진 div 밖을 클릭했을 때 숨겨진 div를 숨깁니다.\n  useEffect(() => {\n    const handleClickOutside = () => setShowOptions(false);\n    if (showOptions) {\n      window.addEventListener(\"click\", handleClickOutside);\n    }\n    return () => window.removeEventListener(\"click\", handleClickOutside);\n  }, [showOptions]);\n  const nlpsearch = text => {\n    dispatch(chatActions.getNLPsearch(text));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat_menubar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"blank0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"chat_menubar_button\",\n          onClick: navihome,\n          children: \"\\uCE5C\\uAD6C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"chat_menubar_button\",\n          children: \"\\uCC44\\uD305\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat_body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat_header\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), view === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat_friendlist\",\n            children: friendList && friendList.map(chat => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat_friendbox\",\n              onClick: () => {\n                if (!webSocket || webSocket.readyState === WebSocket.CLOSED) {\n                  connect(); // Reconnect if disconnected ////++\n                }\n                setRecipientId(chat.user_code2);\n                setView(1);\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chat_profileimg\",\n                children: \"\\uD504\\uB85C\\uD544\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: chat.user_code2\n              }, chat.num, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this), view === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: recipientId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setView(0);\n            },\n            children: \"\\uB4A4\\uB85C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: messages.filter(msg => msg.sender_id === userId && msg.recipient_id === recipientId || msg.sender_id === recipientId && msg.recipient_id === userId).map((msg, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: `message ${msg.sender_id === userId ? \"my-message\" : \"other-message\"}`,\n              onClick: e => handleMsgClick(msg, e),\n              children: [msg.sender_id === userId ? \"\" : `${msg.sender_id}: `, msg.message]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: hiddenDivStyle,\n            className: \"optionsDiv\",\n            children: selectedMessage && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                console.log(`작업 실행: ${selectedMessage.message}`);\n                nlpsearch(selectedMessage.message);\n              },\n              children: [\"\\uC120\\uD0DD\\uD55C \\uBA54\\uC138\\uC9C0: \", selectedMessage.message]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: inputMessage,\n            onChange: e => setInputMessage(e.target.value),\n            onKeyPress: e => e.key === \"Enter\" && sendMessage()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: sendMessage,\n            disabled: !inputMessage.trim() || !userId.trim() || !recipientId,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Chat, \"1tLuHNJEAz/lwGrG5ykygKEDUCg=\", false, function () {\n  return [useNavigate, useDispatch, useSelector];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useDispatch","useSelector","chatActions","jsxDEV","_jsxDEV","Fragment","_Fragment","Chat","_s","webSocket","setWebSocket","messages","setMessages","inputMessage","setInputMessage","userId","setUserId","recipientId","setRecipientId","view","setView","navigate","dispatch","connect","readyState","WebSocket","CLOSED","ws","onopen","console","log","onmessage","event","message","JSON","parse","data","prevMessages","onerror","error","onclose","sendMessage","messageData","sender_id","recipient_id","send","stringify","disconnect","close","friendList","state","chat","userCode","setUserCode","user_code1","user_code2","navihome","getFriendList","showOptions","setShowOptions","optionsPosition","setOptionsPosition","x","y","selectedMessage","setSelectedMessage","handleMsgClick","msg","stopPropagation","clientX","clientY","hiddenDivStyle","position","left","top","display","handleClickOutside","window","addEventListener","removeEventListener","nlpsearch","text","getNLPsearch","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","num","filter","index","e","style","type","value","onChange","target","onKeyPress","key","disabled","trim","_c","$RefreshReg$"],"sources":["D:/ai_chat/react-workspace/blogfriday/src/components/chat/Chat.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Chat.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { chatActions } from \"../../toolkit/actions/chat_Action\";\r\n\r\nfunction Chat() {\r\n  const [webSocket, setWebSocket] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [inputMessage, setInputMessage] = useState(\"\");\r\n  const [userId, setUserId] = useState(\"CCC\");\r\n  const [recipientId, setRecipientId] = useState(\"\");\r\n  const [view, setView] = useState(0); // 추가: 화면 상태 (0: 친구 목록, 1: 채팅)\r\n\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const connect = () => {\r\n    if (!webSocket || webSocket.readyState === WebSocket.CLOSED) {\r\n      const ws = new WebSocket(`ws://localhost:8090/ws/chat?userId=${userId}`);\r\n      ws.onopen = () => console.log(\"Connected to the chat server\");\r\n      ws.onmessage = (event) => {\r\n        const message = JSON.parse(event.data);\r\n        setMessages((prevMessages) => [...prevMessages, message]);\r\n      };\r\n      ws.onerror = (event) => console.error(\"WebSocket error:\", event);\r\n      ws.onclose = (event) =>\r\n        console.log(\"WebSocket connection closed:\", event);\r\n      setWebSocket(ws);\r\n    } else {\r\n      console.log(\"WebSocket is already connected or connecting.\");\r\n    }\r\n  };\r\n\r\n  const sendMessage = () => {\r\n    if (\r\n      webSocket &&\r\n      inputMessage !== \"\" &&\r\n      userId !== \"\" &&\r\n      recipientId !== \"\"\r\n    ) {\r\n      const messageData = {\r\n        sender_id: userId,\r\n        message: inputMessage,\r\n        recipient_id: recipientId,\r\n      };\r\n      webSocket.send(JSON.stringify(messageData));\r\n      setMessages((prevMessages) => [...prevMessages, messageData]);\r\n      setInputMessage(\"\");\r\n    }\r\n  };\r\n\r\n  const disconnect = () => {\r\n    if (webSocket) {\r\n      webSocket.close();\r\n    }\r\n  };\r\n\r\n  const { friendList } = useSelector((state) => state.chat);\r\n\r\n  const [userCode, setUserCode] = useState({\r\n    user_code1: userId,\r\n    user_code2: \"\",\r\n  });\r\n\r\n  const navihome = () => {\r\n    navigate(\"/chat/home\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    connect();\r\n    dispatch(chatActions.getFriendList(userCode.user_code1));\r\n  }, [userCode]);\r\n\r\n  ///\r\n\r\n  const [showOptions, setShowOptions] = useState(false);\r\n  const [optionsPosition, setOptionsPosition] = useState({ x: 0, y: 0 });\r\n  const [selectedMessage, setSelectedMessage] = useState(null);\r\n  // 메시지 클릭 시 동작할 핸들러\r\n  const handleMsgClick = (msg, event) => {\r\n    event.stopPropagation(); // 상위로 이벤트 전파 방지\r\n    const x = event.clientX;\r\n    const y = event.clientY;\r\n\r\n    setOptionsPosition({ x, y });\r\n    setShowOptions(true);\r\n    setSelectedMessage(msg);\r\n  };\r\n\r\n  const hiddenDivStyle = {\r\n    position: \"absolute\",\r\n    left: `${optionsPosition.x}px`,\r\n    top: `${optionsPosition.y}px`,\r\n    display: showOptions ? \"block\" : \"none\",\r\n    // 추가 스타일 설정\r\n  };\r\n\r\n  // 숨겨진 div 밖을 클릭했을 때 숨겨진 div를 숨깁니다.\r\n  useEffect(() => {\r\n    const handleClickOutside = () => setShowOptions(false);\r\n    if (showOptions) {\r\n      window.addEventListener(\"click\", handleClickOutside);\r\n    }\r\n    return () => window.removeEventListener(\"click\", handleClickOutside);\r\n  }, [showOptions]);\r\n\r\n  const nlpsearch = (text) => {\r\n    dispatch(chatActions.getNLPsearch(text));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"chat\">\r\n        <div className=\"chat_menubar\">\r\n          <div className=\"blank0\"></div>\r\n          <button className=\"chat_menubar_button\" onClick={navihome}>\r\n            친구\r\n          </button>\r\n          <button className=\"chat_menubar_button\">채팅</button>\r\n        </div>\r\n        <div className=\"chat_body\">\r\n          <div className=\"chat_header\"></div>\r\n          {/* <input\r\n            type=\"text\"\r\n            placeholder=\"Enter your ID\"\r\n            value={userId}\r\n            onChange={(e) => setUserId(e.target.value)}\r\n            disabled={webSocket && webSocket.readyState === WebSocket.OPEN}\r\n          />\r\n          <button onClick={connect} disabled={userId.trim() === \"\"}>\r\n            Connect\r\n          </button>\r\n          <button onClick={disconnect}>Disconnect</button> */}\r\n\r\n          {view === 0 && (\r\n            <div>\r\n              <div className=\"chat_friendlist\">\r\n                {friendList &&\r\n                  friendList.map((chat) => (\r\n                    <div\r\n                      className=\"chat_friendbox\"\r\n                      onClick={() => {\r\n                        if (\r\n                          !webSocket ||\r\n                          webSocket.readyState === WebSocket.CLOSED\r\n                        ) {\r\n                          connect(); // Reconnect if disconnected ////++\r\n                        }\r\n                        setRecipientId(chat.user_code2);\r\n                        setView(1);\r\n                      }}\r\n                    >\r\n                      <div className=\"chat_profileimg\">프로필</div>\r\n                      <div key={chat.num}>{chat.user_code2}</div>\r\n                    </div>\r\n                  ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {view === 1 && (\r\n            <div>\r\n              <div>{recipientId}</div>\r\n              <button\r\n                onClick={() => {\r\n                  setView(0);\r\n                }}\r\n              >\r\n                뒤로\r\n              </button>\r\n              <ul>\r\n                {messages\r\n                  .filter(\r\n                    (msg) =>\r\n                      (msg.sender_id === userId &&\r\n                        msg.recipient_id === recipientId) ||\r\n                      (msg.sender_id === recipientId &&\r\n                        msg.recipient_id === userId)\r\n                  )\r\n                  .map((msg, index) => (\r\n                    <li\r\n                      key={index}\r\n                      className={`message ${\r\n                        msg.sender_id === userId\r\n                          ? \"my-message\"\r\n                          : \"other-message\"\r\n                      }`}\r\n                      onClick={(e) => handleMsgClick(msg, e)}\r\n                    >\r\n                      {msg.sender_id === userId ? \"\" : `${msg.sender_id}: `}\r\n                      {msg.message}\r\n                    </li>\r\n                  ))}\r\n              </ul>\r\n              <div style={hiddenDivStyle} className=\"optionsDiv\">\r\n                {/* 선택된 메시지 정보를 사용하는 버튼 예시 */}\r\n                {selectedMessage && (\r\n                  <button\r\n                    onClick={() => {\r\n                      console.log(`작업 실행: ${selectedMessage.message}`);\r\n                      nlpsearch(selectedMessage.message);\r\n                    }}\r\n                  >\r\n                    선택한 메세지: {selectedMessage.message}\r\n                  </button>\r\n                )}\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                value={inputMessage}\r\n                onChange={(e) => setInputMessage(e.target.value)}\r\n                onKeyPress={(e) => e.key === \"Enter\" && sendMessage()}\r\n              />\r\n\r\n              <button\r\n                onClick={sendMessage}\r\n                disabled={\r\n                  !inputMessage.trim() || !userId.trim() || !recipientId\r\n                }\r\n              >\r\n                Send\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}