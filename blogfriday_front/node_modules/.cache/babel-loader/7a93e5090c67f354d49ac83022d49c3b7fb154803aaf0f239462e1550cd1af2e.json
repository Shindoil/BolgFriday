{"ast":null,"code":"var _jsxFileName = \"D:\\\\ai_chat\\\\react-workspace\\\\blogfriday\\\\src\\\\components\\\\chat\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./Chat.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { chatActions } from \"../../toolkit/actions/chat_Action\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Chat() {\n  _s();\n  const [webSocket, setWebSocket] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState(\"\");\n  const [userId, setUserId] = useState(\"CCC\");\n\n  // view 0,1 사용및 사용시 택한 유저 저장\n  const [view, setView] = useState(0); // (0: 친구 목록, 1: 채팅)\n  const [recipientId, setRecipientId] = useState(\"\"); //id\n  const [recipientProfile, setRecipientProfile] = useState(\"\"); //프로필\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  //sql timestamp형식과 호환이 잘안되어서 String으로 타입변환후 정해진 시간 형식에 맞게 재조정\n  const timestamp = formatMySQLDateTime();\n  function formatMySQLDateTime() {\n    const now = new Date();\n    return now.getFullYear() + \"-\" + (\"0\" + (now.getMonth() + 1)).slice(-2) + \"-\" + (\"0\" + now.getDate()).slice(-2) + \" \" + (\"0\" + now.getHours()).slice(-2) + \":\" + (\"0\" + now.getMinutes()).slice(-2) + \":\" + (\"0\" + now.getSeconds()).slice(-2);\n  }\n  const connect = () => {\n    if (!webSocket || webSocket.readyState === WebSocket.CLOSED) {\n      const ws = new WebSocket(`ws://localhost:8090/ws/chat?userId=${localStorage.getItem(\"user_code\")}`);\n\n      // const ws = new WebSocket(\n      //   `ws://112.169.231.62:8090/ws/chat?userId=${localStorage.getItem(\n      //     \"user_code\"\n      //   )}`\n      // );\n      ws.onopen = () => console.log(\"Connected to the chat server\");\n      ws.onmessage = event => {\n        const message = JSON.parse(event.data);\n        setMessages(prevMessages => [...prevMessages, message]);\n      };\n      ws.onerror = event => console.error(\"WebSocket error:\", event);\n      ws.onclose = event => console.log(\"WebSocket connection closed:\", event);\n      setWebSocket(ws);\n    } else {\n      console.log(\"WebSocket is already connected or connecting.\");\n    }\n  };\n  const sendMessage = () => {\n    if (webSocket && inputMessage !== \"\" && localStorage.getItem(\"user_code\") !== \"\" && recipientId !== \"\") {\n      const messageData = {\n        sender_id: localStorage.getItem(\"user_code\"),\n        message: inputMessage,\n        recipient_id: recipientId,\n        timestamp: timestamp\n      };\n      webSocket.send(JSON.stringify(messageData));\n      setMessages(prevMessages => [...prevMessages, messageData]);\n      setInputMessage(\"\");\n    }\n  };\n  const disconnect = () => {\n    if (webSocket) {\n      webSocket.close();\n    }\n  };\n  const {\n    friendList\n  } = useSelector(state => state.chat);\n  const [userCode, setUserCode] = useState({\n    user_code1: localStorage.getItem(\"user_code\"),\n    user_code2: \"\"\n  });\n  const navihome = () => {\n    navigate(\"/chat/home\");\n  };\n  const navidot = () => {\n    navigate(\"/chat/dot\");\n  };\n  const naviset = () => {\n    if (window.confirm(\"로그아웃 하시겠습니까?\")) {\n      navigate(\"/chat/set\");\n    }\n  };\n  const navishop = () => {\n    navigate(\"/shophome\");\n  };\n  useEffect(() => {\n    connect();\n    dispatch(chatActions.getFriendList(userCode.user_code1));\n  }, [userCode]);\n\n  ///\n\n  const [showOptions, setShowOptions] = useState(false);\n  const [optionsPosition, setOptionsPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const [selectedMessage, setSelectedMessage] = useState(null);\n  // 메시지 클릭 시 동작할 핸들러\n  const handleMsgClick = (msg, event) => {\n    event.stopPropagation(); // 상위로 이벤트 간섭 방지\n    const x = event.clientX;\n    const y = event.clientY;\n    setOptionsPosition({\n      x,\n      y\n    });\n    setShowOptions(true);\n    setSelectedMessage(msg);\n  };\n  const hiddenDivStyle = {\n    position: \"absolute\",\n    left: `${optionsPosition.x}px`,\n    top: `${optionsPosition.y}px`,\n    display: showOptions ? \"block\" : \"none\"\n    // 추가 스타일 설정\n  };\n\n  // 숨겨진 div 밖을 클릭했을 때 숨겨진 div를 숨깁니다.\n  useEffect(() => {\n    const handleClickOutside = () => setShowOptions(false);\n    if (showOptions) {\n      window.addEventListener(\"click\", handleClickOutside);\n    }\n    return () => window.removeEventListener(\"click\", handleClickOutside);\n  }, [showOptions]);\n  const nlpsearch = text => {\n    dispatch(chatActions.getNLPsearch(text));\n  };\n  const nlpsearch1 = text => {\n    dispatch(chatActions.getNLPsearch1(text));\n  };\n\n  //veiw가 1일때 채팅방에서 만나고있는 사람의 이름가져오기\n  const [recipientName, setRecipientName] = useState(\"\");\n  const updateRecipientName = () => {\n    const friend = friendList.find(friend => friend.user_code === recipientId);\n    if (friend) {\n      setRecipientName(friend.user_nickname);\n    }\n  };\n  useEffect(() => {\n    if (recipientId) {\n      updateRecipientName();\n    }\n  }, [recipientId, friendList]);\n\n  // 각 친구의 최근 메시지를 찾는 함수\n  const findLastMessage = user_code => {\n    const relevantMessages = messages.filter(msg => msg.sender_id === localStorage.getItem(\"user_code\") && msg.recipient_id === user_code || msg.sender_id === user_code && msg.recipient_id === localStorage.getItem(\"user_code\"));\n    return relevantMessages[relevantMessages.length - 1]; // 가장 최근 메시지 반환\n  };\n\n  // 메세지 삭제\n  const deleteMessage = timestamp => {\n    if (selectedMessage) {\n      axios.delete(`/api/chat/deletemessage/${timestamp}`);\n      //재배치\n      setMessages(prevMessages => prevMessages.filter(msg => msg.timestamp !== timestamp));\n    }\n  };\n\n  // 최근 메세지 대로 정렬\n  // 들어온 map을 메세지 시간을 기준으로 재배열후 body에서 참조\n\n  const [sortedFriendList, setSortedFriendList] = useState([]);\n  useEffect(() => {\n    if (friendList.length && messages.length) {\n      const friendsWithLastMessage = friendList.map(friend => {\n        const lastMessage = findLastMessage(friend.user_code);\n        return {\n          ...friend,\n          lastMessageTime: lastMessage ? new Date(lastMessage.timestamp).getTime() : 0\n        };\n      });\n      const sortedFriends = friendsWithLastMessage.sort((a, b) => b.lastMessageTime - a.lastMessageTime);\n      setSortedFriendList(sortedFriends); // 정렬된 목록을 상태로 저장\n    }\n  }, [messages, friendList]);\n  const adminMessage = () => {\n    if (webSocket && webSocket.readyState === WebSocket.OPEN && inputMessage.trim()) {\n      const messageData = {\n        sender_id: localStorage.getItem(\"user_code\"),\n        // or a specific admin code\n        message: inputMessage,\n        recipient_id: \"ALL\",\n        // 사용자가 'ALL'로 설정하여 서버 측에서 이를 인식하게 합니다.\n        timestamp: new Date().toISOString()\n      };\n      webSocket.send(JSON.stringify(messageData));\n      setInputMessage(\"\"); // 입력 필드 초기화\n    }\n  };\n\n  // 대화방 나가면\n  useEffect(() => {\n    setInputMessage(\"\"); // 대화내용초기화\n  }, [view]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [view === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat_body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat_banner\",\n          onClick: navishop\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat_header_box\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat_header_tag\",\n            children: \"\\uCC44\\uD305\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat_friendlist\",\n            children: [localStorage.getItem(\"user_code\") === \"A00000\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat_friendbox\",\n              onClick: () => setView(2),\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"chat_profileimg\",\n                src: \"/basicicon/setwhite.png\",\n                alt: \"\\uBE44\\uC5B4\\uC788\\uC74C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chat_name\",\n                children: \"\\uC804\\uCCB4 \\uACF5\\uC9C0\\uBC29\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 19\n            }, this) : null, sortedFriendList && sortedFriendList.map(chat => {\n              const lastMessage = findLastMessage(chat.user_code); // 각 친구의 최근 메시지 검색\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chat_friendbox\",\n                onClick: () => {\n                  if (!webSocket || webSocket.readyState === WebSocket.CLOSED) {\n                    connect(); // Reconnect if disconnected\n                  }\n                  setRecipientId(chat.user_code);\n                  setRecipientProfile(chat.user_profile);\n                  setView(1);\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"chat_profileimg\",\n                  src: chat.user_code === \"A10000\" ? localStorage.getItem(\"user_profile\") !== \"null\" ? `/profileimages/${localStorage.getItem(\"user_profile\")}` : \"/basicicon/no-profile.png\" : chat.user_profile ? `/profileimages/${chat.user_profile}` : \"/basicicon/no-profile.png\",\n                  alt: \"\\uBE44\\uC5B4\\uC788\\uC74C\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"chat_name\",\n                  children: chat.user_code === \"A10000\" ? localStorage.getItem(\"user_nickname\") : chat.user_nickname\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"chat_last_message\",\n                  children: lastMessage ? lastMessage.message : \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 25\n                }, this)]\n              }, chat.user_id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 23\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat_menubar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat_menubar_button_f\",\n          onClick: navihome\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat_menubar_button_c_c\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat_menubar_button_shop\",\n          onClick: navishop\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat_menubar_button_d\",\n          onClick: navidot\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat_menubar_button_s\",\n          onClick: naviset\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 9\n    }, this), view === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat_o\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat_header1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat_view0_btn\",\n          onClick: () => setView(0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat_view0_username\",\n          children: recipientName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat_talkbox\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          children: messages.filter(msg => msg.sender_id === localStorage.getItem(\"user_code\") && msg.recipient_id === recipientId || msg.sender_id === recipientId && msg.recipient_id === localStorage.getItem(\"user_code\")).map((msg, index, array) => {\n            const previousMsg = array[index - 1];\n            const isFirstMessageOfSender = !previousMsg || previousMsg.sender_id !== msg.sender_id;\n            const imageClass = isFirstMessageOfSender ? \"chat0_profileimg\" : \"chat1_profileimg\";\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"message_boxmi\",\n              children: [msg.sender_id !== localStorage.getItem(\"user_code\") && /*#__PURE__*/_jsxDEV(\"img\", {\n                className: imageClass,\n                src: isFirstMessageOfSender ? recipientProfile ? `/profileimages/${recipientProfile}` : \"/basicicon/no-profile.png\" : \"/basicicon/empty-profile.png\",\n                alt: \"\\uD504\\uB85C\\uD544 \\uC774\\uBBF8\\uC9C0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `message ${msg.sender_id === localStorage.getItem(\"user_code\") ? \"my-message\" : \"other-message\"}`,\n                onClick: e => handleMsgClick(msg, e),\n                children: [msg.sender_id !== localStorage.getItem(\"user_code\") && `${recipientName}: `, msg.message]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 23\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: hiddenDivStyle,\n          className: \"optionsDiv\",\n          children: selectedMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"clickinstance\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"nlpsearch_button\",\n              onClick: () => nlpsearch1(selectedMessage.message),\n              children: [\"blogfriday \\uAC80\\uC0C9: \", selectedMessage.message]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"nlpsearch_button\",\n              onClick: () => nlpsearch(selectedMessage.message),\n              children: [\"\\uC704\\uBA54\\uD504 \\uAC80\\uC0C9: \", selectedMessage.message]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"nlpsearch_button\",\n              onClick: () => deleteMessage(selectedMessage.timestamp),\n              children: \"\\uB300\\uD654 \\uC0AD\\uC81C\\uD558\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat_message\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat_input_message_ipt_box\",\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            contenteditable: \"true\",\n            className: \"chat_input_message\",\n            type: \"text\",\n            value: inputMessage,\n            onChange: e => setInputMessage(e.target.value)\n            // onInput={(e) => setInputMessage(e.currentTarget.textContent)} // 'input' 이벤트 사용, 'textContent'로 값을 가져옴\n            ,\n            onKeyPress: e => e.key === \"Enter\" && sendMessage()\n            // onKeyPress={(e) => e.key === \"Enter\" && sendMessage()}\n            ,\n            disabled: recipientId === \"A00000\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat_input_message_btn_box\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat_input_message_btn\",\n            onClick: sendMessage,\n            disabled: !inputMessage.trim() || !localStorage.getItem(\"user_code\").trim() || !recipientId || recipientId === \"A00000\",\n            children: \"\\uC804\\uC1A1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 9\n    }, this), view === 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat_o\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat_header1\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat_view0_btn\",\n            onClick: () => setView(0)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat_view0_username\",\n            children: \"\\uC804\\uCCB4\\uACF5\\uC9C0\\uBC29\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat_talkbox\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat_message\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat_input_message_ipt_box\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"chat_input_message\",\n            type: \"text\",\n            placeholder: \"Enter message to broadcast\",\n            value: inputMessage,\n            onChange: e => setInputMessage(e.target.value),\n            onKeyPress: e => e.key === \"Enter\" && adminMessage()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat_input_message_btn_box\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat_input_message_btn\",\n            onClick: adminMessage,\n            disabled: !inputMessage.trim(),\n            children: \"\\uC804\\uC1A1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(Chat, \"6aUYNcGYVs9TEjYYQNl+suL4b/E=\", false, function () {\n  return [useNavigate, useDispatch, useSelector];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","useDispatch","useSelector","chatActions","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Chat","_s","webSocket","setWebSocket","messages","setMessages","inputMessage","setInputMessage","userId","setUserId","view","setView","recipientId","setRecipientId","recipientProfile","setRecipientProfile","navigate","dispatch","timestamp","formatMySQLDateTime","now","Date","getFullYear","getMonth","slice","getDate","getHours","getMinutes","getSeconds","connect","readyState","WebSocket","CLOSED","ws","localStorage","getItem","onopen","console","log","onmessage","event","message","JSON","parse","data","prevMessages","onerror","error","onclose","sendMessage","messageData","sender_id","recipient_id","send","stringify","disconnect","close","friendList","state","chat","userCode","setUserCode","user_code1","user_code2","navihome","navidot","naviset","window","confirm","navishop","getFriendList","showOptions","setShowOptions","optionsPosition","setOptionsPosition","x","y","selectedMessage","setSelectedMessage","handleMsgClick","msg","stopPropagation","clientX","clientY","hiddenDivStyle","position","left","top","display","handleClickOutside","addEventListener","removeEventListener","nlpsearch","text","getNLPsearch","nlpsearch1","getNLPsearch1","recipientName","setRecipientName","updateRecipientName","friend","find","user_code","user_nickname","findLastMessage","relevantMessages","filter","length","deleteMessage","delete","sortedFriendList","setSortedFriendList","friendsWithLastMessage","map","lastMessage","lastMessageTime","getTime","sortedFriends","sort","a","b","adminMessage","OPEN","trim","toISOString","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","user_profile","user_id","index","array","previousMsg","isFirstMessageOfSender","imageClass","e","style","contenteditable","type","value","onChange","target","onKeyPress","key","disabled","placeholder","_c","$RefreshReg$"],"sources":["D:/ai_chat/react-workspace/blogfriday/src/components/chat/Chat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./Chat.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { chatActions } from \"../../toolkit/actions/chat_Action\";\r\nimport axios from \"axios\";\r\n\r\nfunction Chat() {\r\n  const [webSocket, setWebSocket] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [inputMessage, setInputMessage] = useState(\"\");\r\n  const [userId, setUserId] = useState(\"CCC\");\r\n\r\n  // view 0,1 사용및 사용시 택한 유저 저장\r\n  const [view, setView] = useState(0); // (0: 친구 목록, 1: 채팅)\r\n  const [recipientId, setRecipientId] = useState(\"\"); //id\r\n  const [recipientProfile, setRecipientProfile] = useState(\"\"); //프로필\r\n\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  //sql timestamp형식과 호환이 잘안되어서 String으로 타입변환후 정해진 시간 형식에 맞게 재조정\r\n  const timestamp = formatMySQLDateTime();\r\n  function formatMySQLDateTime() {\r\n    const now = new Date();\r\n    return (\r\n      now.getFullYear() +\r\n      \"-\" +\r\n      (\"0\" + (now.getMonth() + 1)).slice(-2) +\r\n      \"-\" +\r\n      (\"0\" + now.getDate()).slice(-2) +\r\n      \" \" +\r\n      (\"0\" + now.getHours()).slice(-2) +\r\n      \":\" +\r\n      (\"0\" + now.getMinutes()).slice(-2) +\r\n      \":\" +\r\n      (\"0\" + now.getSeconds()).slice(-2)\r\n    );\r\n  }\r\n\r\n  const connect = () => {\r\n    if (!webSocket || webSocket.readyState === WebSocket.CLOSED) {\r\n      const ws = new WebSocket(\r\n        `ws://localhost:8090/ws/chat?userId=${localStorage.getItem(\r\n          \"user_code\"\r\n        )}`\r\n      );\r\n\r\n      // const ws = new WebSocket(\r\n      //   `ws://112.169.231.62:8090/ws/chat?userId=${localStorage.getItem(\r\n      //     \"user_code\"\r\n      //   )}`\r\n      // );\r\n      ws.onopen = () => console.log(\"Connected to the chat server\");\r\n      ws.onmessage = (event) => {\r\n        const message = JSON.parse(event.data);\r\n        setMessages((prevMessages) => [...prevMessages, message]);\r\n      };\r\n      ws.onerror = (event) => console.error(\"WebSocket error:\", event);\r\n      ws.onclose = (event) =>\r\n        console.log(\"WebSocket connection closed:\", event);\r\n      setWebSocket(ws);\r\n    } else {\r\n      console.log(\"WebSocket is already connected or connecting.\");\r\n    }\r\n  };\r\n\r\n  const sendMessage = () => {\r\n    if (\r\n      webSocket &&\r\n      inputMessage !== \"\" &&\r\n      localStorage.getItem(\"user_code\") !== \"\" &&\r\n      recipientId !== \"\"\r\n    ) {\r\n      const messageData = {\r\n        sender_id: localStorage.getItem(\"user_code\"),\r\n        message: inputMessage,\r\n        recipient_id: recipientId,\r\n        timestamp: timestamp,\r\n      };\r\n      webSocket.send(JSON.stringify(messageData));\r\n      setMessages((prevMessages) => [...prevMessages, messageData]);\r\n      setInputMessage(\"\");\r\n    }\r\n  };\r\n\r\n  const disconnect = () => {\r\n    if (webSocket) {\r\n      webSocket.close();\r\n    }\r\n  };\r\n\r\n  const { friendList } = useSelector((state) => state.chat);\r\n\r\n  const [userCode, setUserCode] = useState({\r\n    user_code1: localStorage.getItem(\"user_code\"),\r\n    user_code2: \"\",\r\n  });\r\n\r\n  const navihome = () => {\r\n    navigate(\"/chat/home\");\r\n  };\r\n\r\n  const navidot = () => {\r\n    navigate(\"/chat/dot\");\r\n  };\r\n\r\n  const naviset = () => {\r\n    if (window.confirm(\"로그아웃 하시겠습니까?\")) {\r\n      navigate(\"/chat/set\");\r\n    }\r\n  };\r\n\r\n  const navishop = () => {\r\n    navigate(\"/shophome\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    connect();\r\n    dispatch(chatActions.getFriendList(userCode.user_code1));\r\n  }, [userCode]);\r\n\r\n  ///\r\n\r\n  const [showOptions, setShowOptions] = useState(false);\r\n  const [optionsPosition, setOptionsPosition] = useState({ x: 0, y: 0 });\r\n  const [selectedMessage, setSelectedMessage] = useState(null);\r\n  // 메시지 클릭 시 동작할 핸들러\r\n  const handleMsgClick = (msg, event) => {\r\n    event.stopPropagation(); // 상위로 이벤트 간섭 방지\r\n    const x = event.clientX;\r\n    const y = event.clientY;\r\n\r\n    setOptionsPosition({ x, y });\r\n    setShowOptions(true);\r\n    setSelectedMessage(msg);\r\n  };\r\n\r\n  const hiddenDivStyle = {\r\n    position: \"absolute\",\r\n    left: `${optionsPosition.x}px`,\r\n    top: `${optionsPosition.y}px`,\r\n    display: showOptions ? \"block\" : \"none\",\r\n    // 추가 스타일 설정\r\n  };\r\n\r\n  // 숨겨진 div 밖을 클릭했을 때 숨겨진 div를 숨깁니다.\r\n  useEffect(() => {\r\n    const handleClickOutside = () => setShowOptions(false);\r\n    if (showOptions) {\r\n      window.addEventListener(\"click\", handleClickOutside);\r\n    }\r\n    return () => window.removeEventListener(\"click\", handleClickOutside);\r\n  }, [showOptions]);\r\n\r\n  const nlpsearch = (text) => {\r\n    dispatch(chatActions.getNLPsearch(text));\r\n  };\r\n  const nlpsearch1 = (text) => {\r\n    dispatch(chatActions.getNLPsearch1(text));\r\n  };\r\n\r\n  //veiw가 1일때 채팅방에서 만나고있는 사람의 이름가져오기\r\n  const [recipientName, setRecipientName] = useState(\"\");\r\n\r\n  const updateRecipientName = () => {\r\n    const friend = friendList.find(\r\n      (friend) => friend.user_code === recipientId\r\n    );\r\n    if (friend) {\r\n      setRecipientName(friend.user_nickname);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (recipientId) {\r\n      updateRecipientName();\r\n    }\r\n  }, [recipientId, friendList]);\r\n\r\n  // 각 친구의 최근 메시지를 찾는 함수\r\n  const findLastMessage = (user_code) => {\r\n    const relevantMessages = messages.filter(\r\n      (msg) =>\r\n        (msg.sender_id === localStorage.getItem(\"user_code\") &&\r\n          msg.recipient_id === user_code) ||\r\n        (msg.sender_id === user_code &&\r\n          msg.recipient_id === localStorage.getItem(\"user_code\"))\r\n    );\r\n    return relevantMessages[relevantMessages.length - 1]; // 가장 최근 메시지 반환\r\n  };\r\n\r\n  // 메세지 삭제\r\n  const deleteMessage = (timestamp) => {\r\n    if (selectedMessage) {\r\n      axios.delete(`/api/chat/deletemessage/${timestamp}`);\r\n      //재배치\r\n      setMessages((prevMessages) =>\r\n        prevMessages.filter((msg) => msg.timestamp !== timestamp)\r\n      );\r\n    }\r\n  };\r\n\r\n  // 최근 메세지 대로 정렬\r\n  // 들어온 map을 메세지 시간을 기준으로 재배열후 body에서 참조\r\n\r\n  const [sortedFriendList, setSortedFriendList] = useState([]);\r\n  useEffect(() => {\r\n    if (friendList.length && messages.length) {\r\n      const friendsWithLastMessage = friendList.map((friend) => {\r\n        const lastMessage = findLastMessage(friend.user_code);\r\n        return {\r\n          ...friend,\r\n          lastMessageTime: lastMessage\r\n            ? new Date(lastMessage.timestamp).getTime()\r\n            : 0,\r\n        };\r\n      });\r\n\r\n      const sortedFriends = friendsWithLastMessage.sort(\r\n        (a, b) => b.lastMessageTime - a.lastMessageTime\r\n      );\r\n\r\n      setSortedFriendList(sortedFriends); // 정렬된 목록을 상태로 저장\r\n    }\r\n  }, [messages, friendList]);\r\n\r\n  const adminMessage = () => {\r\n    if (\r\n      webSocket &&\r\n      webSocket.readyState === WebSocket.OPEN &&\r\n      inputMessage.trim()\r\n    ) {\r\n      const messageData = {\r\n        sender_id: localStorage.getItem(\"user_code\"), // or a specific admin code\r\n        message: inputMessage,\r\n        recipient_id: \"ALL\", // 사용자가 'ALL'로 설정하여 서버 측에서 이를 인식하게 합니다.\r\n        timestamp: new Date().toISOString(),\r\n      };\r\n      webSocket.send(JSON.stringify(messageData));\r\n      setInputMessage(\"\"); // 입력 필드 초기화\r\n    }\r\n  };\r\n\r\n  // 대화방 나가면\r\n  useEffect(() => {\r\n    setInputMessage(\"\"); // 대화내용초기화\r\n  }, [view]);\r\n\r\n  return (\r\n    <>\r\n      {view === 0 && (\r\n        <div className=\"chat\">\r\n          <div className=\"chat_body\">\r\n            <div className=\"chat_banner\" onClick={navishop}></div>\r\n            <div className=\"chat_header_box\">\r\n              <div className=\"chat_header_tag\">채팅</div>\r\n            </div>\r\n            <div>\r\n              <div className=\"chat_friendlist\">\r\n                {localStorage.getItem(\"user_code\") === \"A00000\" ? (\r\n                  <div className=\"chat_friendbox\" onClick={() => setView(2)}>\r\n                    <img\r\n                      className=\"chat_profileimg\"\r\n                      src={\"/basicicon/setwhite.png\"}\r\n                      alt=\"비어있음\"\r\n                    ></img>\r\n                    <div className=\"chat_name\">전체 공지방</div>\r\n                  </div>\r\n                ) : null}\r\n                {sortedFriendList &&\r\n                  sortedFriendList.map((chat) => {\r\n                    const lastMessage = findLastMessage(chat.user_code); // 각 친구의 최근 메시지 검색\r\n                    return (\r\n                      <div\r\n                        className=\"chat_friendbox\"\r\n                        key={chat.user_id}\r\n                        onClick={() => {\r\n                          if (\r\n                            !webSocket ||\r\n                            webSocket.readyState === WebSocket.CLOSED\r\n                          ) {\r\n                            connect(); // Reconnect if disconnected\r\n                          }\r\n                          setRecipientId(chat.user_code);\r\n                          setRecipientProfile(chat.user_profile);\r\n                          setView(1);\r\n                        }}\r\n                      >\r\n                        <img\r\n                          className=\"chat_profileimg\"\r\n                          src={\r\n                            chat.user_code === \"A10000\"\r\n                              ? localStorage.getItem(\"user_profile\") !== \"null\"\r\n                                ? `/profileimages/${localStorage.getItem(\r\n                                    \"user_profile\"\r\n                                  )}`\r\n                                : \"/basicicon/no-profile.png\"\r\n                              : chat.user_profile\r\n                              ? `/profileimages/${chat.user_profile}`\r\n                              : \"/basicicon/no-profile.png\"\r\n                          }\r\n                          alt=\"비어있음\"\r\n                        ></img>\r\n                        <div className=\"chat_name\">\r\n                          {chat.user_code === \"A10000\"\r\n                            ? localStorage.getItem(\"user_nickname\")\r\n                            : chat.user_nickname}\r\n                        </div>\r\n                        <div className=\"chat_last_message\">\r\n                          {lastMessage ? lastMessage.message : \"\"}\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"chat_menubar\">\r\n            <div className=\"chat_menubar_button_f\" onClick={navihome}></div>\r\n            <div className=\"chat_menubar_button_c_c\"></div>\r\n\r\n            <div className=\"chat_menubar_button_shop\" onClick={navishop}></div>\r\n            <div className=\"chat_menubar_button_d\" onClick={navidot}></div>\r\n            <div className=\"chat_menubar_button_s\" onClick={naviset}></div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {view === 1 && (\r\n        <div className=\"chat_o\">\r\n          <div className=\"chat_header1\">\r\n            <div className=\"chat_view0_btn\" onClick={() => setView(0)}></div>\r\n            <div className=\"chat_view0_username\">{recipientName}</div>\r\n          </div>\r\n          <div className=\"chat_talkbox\">\r\n            <ul>\r\n              {messages\r\n                .filter(\r\n                  (msg) =>\r\n                    (msg.sender_id === localStorage.getItem(\"user_code\") &&\r\n                      msg.recipient_id === recipientId) ||\r\n                    (msg.sender_id === recipientId &&\r\n                      msg.recipient_id === localStorage.getItem(\"user_code\"))\r\n                )\r\n                .map((msg, index, array) => {\r\n                  const previousMsg = array[index - 1];\r\n                  const isFirstMessageOfSender =\r\n                    !previousMsg || previousMsg.sender_id !== msg.sender_id;\r\n                  const imageClass = isFirstMessageOfSender\r\n                    ? \"chat0_profileimg\"\r\n                    : \"chat1_profileimg\";\r\n\r\n                  return (\r\n                    <li key={index} className=\"message_boxmi\">\r\n                      {msg.sender_id !== localStorage.getItem(\"user_code\") && (\r\n                        <img\r\n                          className={imageClass}\r\n                          src={\r\n                            isFirstMessageOfSender\r\n                              ? recipientProfile\r\n                                ? `/profileimages/${recipientProfile}`\r\n                                : \"/basicicon/no-profile.png\"\r\n                              : \"/basicicon/empty-profile.png\"\r\n                          }\r\n                          alt=\"프로필 이미지\"\r\n                        />\r\n                      )}\r\n                      <div\r\n                        className={`message ${\r\n                          msg.sender_id === localStorage.getItem(\"user_code\")\r\n                            ? \"my-message\"\r\n                            : \"other-message\"\r\n                        }`}\r\n                        onClick={(e) => handleMsgClick(msg, e)}\r\n                      >\r\n                        {msg.sender_id !== localStorage.getItem(\"user_code\") &&\r\n                          `${recipientName}: `}\r\n                        {msg.message}\r\n                      </div>\r\n                    </li>\r\n                  );\r\n                })}\r\n            </ul>\r\n            <div style={hiddenDivStyle} className=\"optionsDiv\">\r\n              {selectedMessage && (\r\n                <div className=\"clickinstance\">\r\n                  <button\r\n                    className=\"nlpsearch_button\"\r\n                    onClick={() => nlpsearch1(selectedMessage.message)}\r\n                  >\r\n                    blogfriday 검색: {selectedMessage.message}\r\n                  </button>\r\n                  <button\r\n                    className=\"nlpsearch_button\"\r\n                    onClick={() => nlpsearch(selectedMessage.message)}\r\n                  >\r\n                    위메프 검색: {selectedMessage.message}\r\n                  </button>\r\n\r\n                  <button\r\n                    className=\"nlpsearch_button\"\r\n                    onClick={() => deleteMessage(selectedMessage.timestamp)}\r\n                  >\r\n                    대화 삭제하기\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"chat_message\">\r\n            <div className=\"chat_input_message_ipt_box\">\r\n              <textarea\r\n                contenteditable=\"true\"\r\n                className=\"chat_input_message\"\r\n                type=\"text\"\r\n                value={inputMessage}\r\n                onChange={(e) => setInputMessage(e.target.value)}\r\n                // onInput={(e) => setInputMessage(e.currentTarget.textContent)} // 'input' 이벤트 사용, 'textContent'로 값을 가져옴\r\n                onKeyPress={(e) => e.key === \"Enter\" && sendMessage()}\r\n                // onKeyPress={(e) => e.key === \"Enter\" && sendMessage()}\r\n                disabled={recipientId === \"A00000\"}\r\n              />\r\n            </div>\r\n            <div className=\"chat_input_message_btn_box\">\r\n              <div\r\n                className=\"chat_input_message_btn\"\r\n                onClick={sendMessage}\r\n                disabled={\r\n                  !inputMessage.trim() ||\r\n                  !localStorage.getItem(\"user_code\").trim() ||\r\n                  !recipientId ||\r\n                  recipientId === \"A00000\"\r\n                }\r\n              >\r\n                전송\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {view === 2 && (\r\n        <div>\r\n          <div className=\"chat_o\">\r\n            <div className=\"chat_header1\">\r\n              <div className=\"chat_view0_btn\" onClick={() => setView(0)}></div>\r\n              <div className=\"chat_view0_username\">전체공지방</div>\r\n            </div>\r\n            <div className=\"chat_talkbox\">\r\n              <ul></ul>\r\n            </div>\r\n          </div>\r\n          <div className=\"chat_message\">\r\n            <div className=\"chat_input_message_ipt_box\">\r\n              <input\r\n                className=\"chat_input_message\"\r\n                type=\"text\"\r\n                placeholder=\"Enter message to broadcast\"\r\n                value={inputMessage}\r\n                onChange={(e) => setInputMessage(e.target.value)}\r\n                onKeyPress={(e) => e.key === \"Enter\" && adminMessage()}\r\n              />\r\n            </div>\r\n            <div className=\"chat_input_message_btn_box\">\r\n              <div\r\n                className=\"chat_input_message_btn\"\r\n                onClick={adminMessage}\r\n                disabled={!inputMessage.trim()}\r\n              >\r\n                전송\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}