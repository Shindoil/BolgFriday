{"ast":null,"code":"var _jsxFileName = \"E:\\\\ai_chat\\\\react\\\\blogfriday\\\\src\\\\components\\\\chat\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport \"./Chat.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Chat() {\n  _s();\n  var _location$state;\n  const [webSocket, setWebSocket] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState(\"\");\n  const [isConnected, setIsConnected] = useState(false);\n  const location = useLocation();\n  let user_id = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.user_id;\n  // WebSocket 연결 설정\n\n  //연결\n  const connectWebSocket = () => {\n    console.log(user_id);\n    const ws = new WebSocket(\"ws://localhost:8090/ws/chat\");\n    ws.onopen = () => {\n      console.log(\"WebSocket 서버에 연결됨\");\n      setIsConnected(true);\n      const enterMessage = {\n        messageType: \"ENTER\",\n        chatRoomId: user_id,\n        senderId: 123,\n        message: \"\"\n      };\n      ws.send(JSON.stringify(enterMessage));\n      console.log(\"입장\", enterMessage);\n    };\n    ws.onmessage = event => {\n      const message = JSON.parse(event.data);\n      setMessages(prevMessages => [...prevMessages, message]);\n    };\n    ws.onclose = e => {\n      console.log(e.code);\n      console.log(\"WebSocket 서버에서 연결 끊김\");\n      setIsConnected(false);\n    };\n    setWebSocket(ws);\n  };\n  useEffect(() => {}, []);\n  const sendMessage = () => {\n    if (webSocket) {\n      const message = {\n        messageType: \"TALK\",\n        chatRoomId: user_id,\n        // 채팅방에 따라 동적으로 설정해야 함\n        senderId: 123,\n        // 사용자의 ID여야 함\n        message: inputMessage\n      };\n      console.log(message);\n      webSocket.send(JSON.stringify(message));\n      setInputMessage(\"\");\n    }\n  };\n  const changeFriendName = event => {\n    user_id = event;\n    retryConnection();\n  };\n  const retryConnection = () => {\n    if (!isConnected) {\n      connectWebSocket();\n    }\n  };\n  useEffect(() => {\n    connectWebSocket();\n    return () => {\n      if (webSocket) webSocket.close();\n    };\n  }, [user_id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isConnected ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uCC44\\uD305\\uBC29\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputMessage,\n        onChange: e => setInputMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"\\uBCF4\\uB0B4\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat_content_box\",\n        children: messages.map((msg, index) => msg.message && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [msg.senderId, \": \", msg.message]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 19\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\uCE5C\\uAD6C\\uBAA9\\uB85D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"friend_button\",\n        onClick: () => {\n          changeFriendName(\"규연\");\n          retryConnection();\n        },\n        children: \"\\uADDC\\uC5F0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"friend_button\",\n        onClick: () => {\n          changeFriendName(\"민호\");\n          retryConnection();\n        },\n        children: \"\\uBBFC\\uD638\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"friend_button\",\n        onClick: () => {\n          changeFriendName(\"도일\");\n          retryConnection();\n        },\n        children: \"\\uB3C4\\uC77C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"friend_button\",\n        onClick: () => {\n          changeFriendName(\"규철\");\n          retryConnection();\n        },\n        children: \"\\uADDC\\uCCA0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"f55aPMklO4OVQrRSXcuPOI5g2OA=\", false, function () {\n  return [useLocation];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","jsxDEV","_jsxDEV","Fragment","_Fragment","Chat","_s","_location$state","webSocket","setWebSocket","messages","setMessages","inputMessage","setInputMessage","isConnected","setIsConnected","location","user_id","state","connectWebSocket","console","log","ws","WebSocket","onopen","enterMessage","messageType","chatRoomId","senderId","message","send","JSON","stringify","onmessage","event","parse","data","prevMessages","onclose","e","code","sendMessage","changeFriendName","retryConnection","close","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","onClick","className","map","msg","index","_c","$RefreshReg$"],"sources":["E:/ai_chat/react/blogfriday/src/components/chat/Chat.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport \"./Chat.css\";\r\n\r\nfunction Chat() {\r\n  const [webSocket, setWebSocket] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [inputMessage, setInputMessage] = useState(\"\");\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const location = useLocation();\r\n  let user_id = location.state?.user_id;\r\n  // WebSocket 연결 설정\r\n\r\n  //연결\r\n  const connectWebSocket = () => {\r\n    console.log(user_id);\r\n\r\n    const ws = new WebSocket(\"ws://localhost:8090/ws/chat\");\r\n\r\n    ws.onopen = () => {\r\n      console.log(\"WebSocket 서버에 연결됨\");\r\n      setIsConnected(true);\r\n      const enterMessage = {\r\n        messageType: \"ENTER\",\r\n        chatRoomId: user_id,\r\n        senderId: 123,\r\n        message: \"\",\r\n      };\r\n      ws.send(JSON.stringify(enterMessage));\r\n      console.log(\"입장\", enterMessage);\r\n    };\r\n\r\n    ws.onmessage = (event) => {\r\n      const message = JSON.parse(event.data);\r\n      setMessages((prevMessages) => [...prevMessages, message]);\r\n    };\r\n\r\n    ws.onclose = (e) => {\r\n      console.log(e.code);\r\n      console.log(\"WebSocket 서버에서 연결 끊김\");\r\n      setIsConnected(false);\r\n    };\r\n\r\n    setWebSocket(ws);\r\n  };\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  const sendMessage = () => {\r\n    if (webSocket) {\r\n      const message = {\r\n        messageType: \"TALK\",\r\n        chatRoomId: user_id, // 채팅방에 따라 동적으로 설정해야 함\r\n        senderId: 123, // 사용자의 ID여야 함\r\n        message: inputMessage,\r\n      };\r\n      console.log(message);\r\n      webSocket.send(JSON.stringify(message));\r\n      setInputMessage(\"\");\r\n    }\r\n  };\r\n\r\n  const changeFriendName = (event) => {\r\n    user_id = event;\r\n    retryConnection();\r\n  };\r\n\r\n  const retryConnection = () => {\r\n    if (!isConnected) {\r\n      connectWebSocket();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    connectWebSocket();\r\n    return () => {\r\n      if (webSocket) webSocket.close();\r\n    };\r\n  }, [user_id]);\r\n\r\n  return (\r\n    <div>\r\n      {isConnected ? (\r\n        <>\r\n          <h2>채팅방</h2>\r\n          <input\r\n            type=\"text\"\r\n            value={inputMessage}\r\n            onChange={(e) => setInputMessage(e.target.value)}\r\n          />\r\n          <button onClick={sendMessage}>보내기</button>\r\n\r\n          <div className=\"chat_content_box\">\r\n            {messages.map(\r\n              (msg, index) =>\r\n                msg.message && (\r\n                  <p key={index}>\r\n                    {msg.senderId}: {msg.message}\r\n                  </p>\r\n                )\r\n            )}\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <div>\r\n          <div>친구목록</div>\r\n          <div\r\n            className=\"friend_button\"\r\n            onClick={() => {\r\n              changeFriendName(\"규연\");\r\n              retryConnection();\r\n            }}\r\n          >\r\n            규연\r\n          </div>\r\n          <div\r\n            className=\"friend_button\"\r\n            onClick={() => {\r\n              changeFriendName(\"민호\");\r\n              retryConnection();\r\n            }}\r\n          >\r\n            민호\r\n          </div>\r\n          <div\r\n            className=\"friend_button\"\r\n            onClick={() => {\r\n              changeFriendName(\"도일\");\r\n              retryConnection();\r\n            }}\r\n          >\r\n            도일\r\n          </div>\r\n          <div\r\n            className=\"friend_button\"\r\n            onClick={() => {\r\n              changeFriendName(\"규철\");\r\n              retryConnection();\r\n            }}\r\n          >\r\n            규철\r\n          </div>\r\n          <div></div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}