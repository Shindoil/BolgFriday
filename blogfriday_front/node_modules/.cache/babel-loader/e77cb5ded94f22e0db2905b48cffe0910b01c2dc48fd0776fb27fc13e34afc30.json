{"ast":null,"code":"var _jsxFileName = \"D:\\\\ai_chat\\\\react-workspace\\\\blogfriday\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import API_URL from \"./config\";\n// import \"./App.css\";\n\n// const App = () => {\n//   const [orderInfo, setOrderInfo] = useState({\n//     deliveryAddress: \"\",\n//     recipient: \"\",\n//     deliveryInstruction: \"\",\n//     paymentMethodId: \"\",\n//   });\n\n//   // products를 배열에서 객체로 변경\n//   const [product, setProduct] = useState({});\n//   console.log(product.productName);\n//   const [paymentResult, setPaymentResult] = useState(\"\");\n\n//   useEffect(() => {\n//     const fetchProduct = async () => {\n//       try {\n//         const response = await axios.get(`${API_URL}/product/content/3`);\n//         setProduct(response.data);\n//       } catch (error) {\n//         console.error(\"상품 데이터를 불러오는 중 오류가 발생했습니다:\", error);\n//       }\n//     };\n//     fetchProduct();\n//   }, []);\n\n//   console.log(\"현재 상품 상태:\", product.product_name);\n\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setOrderInfo({ ...orderInfo, [name]: value });\n//   };\n\n//   const submitOrder = async () => {\n// try {\n//   const response = await axios.post(`${API_URL}/orders`, {\n//     ...orderInfo,\n//     products: [\n//       {\n//         productId: product.productId,\n//         quantity: 1, // 예시로 1을 사용, 실제 양식에 맞게 수정 필요\n//       },\n//     ],\n//     orderAmount: product.productPrice, // 예시로 productPrice 사용, 실제 계산 로직 필요\n//   });\n//   if (response.status === 200) {\n//     setPaymentResult(\"주문이 성공적으로 처리되었습니다.\");\n//   }\n// } catch (error) {\n//   console.error(\"주문 처리 중 오류가 발생했습니다.\", error);\n//   setPaymentResult(\"주문 처리 중 오류가 발생했습니다.\");\n// }\n//   };\n\n//   return (\n//     <div className=\"app\">\n//       {/* 렌더링 및 입력 폼 코드 */}\n// <div className=\"order-form\">\n//   <h2>주문 및 결제</h2>\n//   <input\n//     type=\"text\"\n//     name=\"deliveryAddress\"\n//     placeholder=\"배송지\"\n//     onChange={handleInputChange}\n//   />\n//   <input\n//     type=\"text\"\n//     name=\"recipient\"\n//     placeholder=\"받는 사람\"\n//     onChange={handleInputChange}\n//   />\n//   <input\n//     type=\"text\"\n//     name=\"deliveryInstruction\"\n//     placeholder=\"배송 요청사항\"\n//     onChange={handleInputChange}\n//   />\n//   <select name=\"paymentMethodId\" onChange={handleInputChange}>\n//     <option value=\"\">결제 수단 선택</option>\n//     <option value=\"1\">신용카드</option>\n//     <option value=\"2\">계좌이체</option>\n//     <option value=\"3\">기타</option>\n//   </select>\n//         <div className=\"order-form\">\n//           <h3>상품 정보</h3>\n//           <div className=\"product-info\">\n//             {product.product_name ? ( // productName이 존재하는 경우에만 상품 정보 렌더링\n//               <>\n//                 <h2>{product.product_name}</h2>\n//                 <p>가격: ${product.product_price}</p>\n//                 <p>색상: {product.product_color}</p>\n//                 <p>사이즈: {product.product_size}</p>\n//               </>\n//             ) : (\n//               <p>상품 정보를 불러오는 중...</p> // 상품 정보가 아직 로드되지 않았을 경우\n//             )}\n//           </div>\n//           <div className=\"payment-button\">\n//             <button onClick={submitOrder}>주문하기</button>\n//           </div>\n//           {paymentResult && <p>{paymentResult}</p>}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default App;\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\n// 설정 파일로부터 API URL 불러오기 (예: http://localhost:8090)\nimport API_URL from \"./config\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [product, setProduct] = useState(null);\n  const [orderInfo, setOrderInfo] = useState({\n    deliveryAddress: \"\",\n    recipient: \"\",\n    deliveryInstruction: \"\",\n    quantity: 1 // 기본 수량을 1로 설정\n  });\n  const [paymentResult, setPaymentResult] = useState(\"\");\n\n  // 단일 상품 정보를 불러오는 효과\n  useEffect(() => {\n    const fetchProduct = async () => {\n      try {\n        const response = await axios.get(`${API_URL}/product/content/3`);\n        setProduct(response.data); // 단일 상품 정보를 상태에 저장\n      } catch (error) {\n        console.error(\"Error fetching product:\", error);\n      }\n    };\n    fetchProduct();\n  }, []);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setOrderInfo({\n      ...orderInfo,\n      [name]: value\n    });\n  };\n  const handleQuantityChange = e => {\n    setOrderInfo({\n      ...orderInfo,\n      quantity: parseInt(e.target.value, 10)\n    });\n  };\n  const submitOrder = async () => {\n    try {\n      const response = await axios.post(`${API_URL}/orders`, {\n        ...orderInfo,\n        products: [{\n          productId: product.product_id,\n          quantity: 1 // 예시로 1을 사용, 실제 양식에 맞게 수정 필요\n        }],\n        orderAmount: product.productPrice // 예시로 productPrice 사용, 실제 계산 로직 필요\n      });\n      if (response.status === 200) {\n        setPaymentResult(\"주문이 성공적으로 처리되었습니다.\");\n      }\n    } catch (error) {\n      console.error(\"주문 처리 중 오류가 발생했습니다.\", error);\n      setPaymentResult(\"주문 처리 중 오류가 발생했습니다.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uC8FC\\uBB38 \\uBC0F \\uACB0\\uC81C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"deliveryAddress\",\n        placeholder: \"\\uBC30\\uC1A1\\uC9C0\",\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"recipient\",\n        placeholder: \"\\uBC1B\\uB294 \\uC0AC\\uB78C\",\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"deliveryInstruction\",\n        placeholder: \"\\uBC30\\uC1A1 \\uC694\\uCCAD\\uC0AC\\uD56D\",\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"paymentMethodId\",\n        onChange: handleInputChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"\\uACB0\\uC81C \\uC218\\uB2E8 \\uC120\\uD0DD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"1\",\n          children: \"\\uC2E0\\uC6A9\\uCE74\\uB4DC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2\",\n          children: \"\\uACC4\\uC88C\\uC774\\uCCB4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"3\",\n          children: \"\\uAE30\\uD0C0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), product && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uC8FC\\uBB38 \\uBC0F \\uACB0\\uC81C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uC81C\\uD488\\uBA85: \", product.product_name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uAC00\\uACA9: $\", product.product_price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"\\uAC2F\\uC218 \\uC120\\uD0DD:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"quantity\",\n            value: orderInfo.quantity,\n            onChange: handleQuantityChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: submitOrder,\n          children: \"Submit Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this), paymentResult && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: paymentResult\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Lj518O+Es+/W1iMaBIF3nHd6y5A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","API_URL","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","product","setProduct","orderInfo","setOrderInfo","deliveryAddress","recipient","deliveryInstruction","quantity","paymentResult","setPaymentResult","fetchProduct","response","get","data","error","console","handleInputChange","e","name","value","target","handleQuantityChange","parseInt","submitOrder","post","products","productId","product_id","orderAmount","productPrice","status","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","product_name","product_price","onClick","_c","$RefreshReg$"],"sources":["D:/ai_chat/react-workspace/blogfriday/src/App.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import API_URL from \"./config\";\n// import \"./App.css\";\n\n// const App = () => {\n//   const [orderInfo, setOrderInfo] = useState({\n//     deliveryAddress: \"\",\n//     recipient: \"\",\n//     deliveryInstruction: \"\",\n//     paymentMethodId: \"\",\n//   });\n\n//   // products를 배열에서 객체로 변경\n//   const [product, setProduct] = useState({});\n//   console.log(product.productName);\n//   const [paymentResult, setPaymentResult] = useState(\"\");\n\n//   useEffect(() => {\n//     const fetchProduct = async () => {\n//       try {\n//         const response = await axios.get(`${API_URL}/product/content/3`);\n//         setProduct(response.data);\n//       } catch (error) {\n//         console.error(\"상품 데이터를 불러오는 중 오류가 발생했습니다:\", error);\n//       }\n//     };\n//     fetchProduct();\n//   }, []);\n\n//   console.log(\"현재 상품 상태:\", product.product_name);\n\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setOrderInfo({ ...orderInfo, [name]: value });\n//   };\n\n//   const submitOrder = async () => {\n// try {\n//   const response = await axios.post(`${API_URL}/orders`, {\n//     ...orderInfo,\n//     products: [\n//       {\n//         productId: product.productId,\n//         quantity: 1, // 예시로 1을 사용, 실제 양식에 맞게 수정 필요\n//       },\n//     ],\n//     orderAmount: product.productPrice, // 예시로 productPrice 사용, 실제 계산 로직 필요\n//   });\n//   if (response.status === 200) {\n//     setPaymentResult(\"주문이 성공적으로 처리되었습니다.\");\n//   }\n// } catch (error) {\n//   console.error(\"주문 처리 중 오류가 발생했습니다.\", error);\n//   setPaymentResult(\"주문 처리 중 오류가 발생했습니다.\");\n// }\n//   };\n\n//   return (\n//     <div className=\"app\">\n//       {/* 렌더링 및 입력 폼 코드 */}\n// <div className=\"order-form\">\n//   <h2>주문 및 결제</h2>\n//   <input\n//     type=\"text\"\n//     name=\"deliveryAddress\"\n//     placeholder=\"배송지\"\n//     onChange={handleInputChange}\n//   />\n//   <input\n//     type=\"text\"\n//     name=\"recipient\"\n//     placeholder=\"받는 사람\"\n//     onChange={handleInputChange}\n//   />\n//   <input\n//     type=\"text\"\n//     name=\"deliveryInstruction\"\n//     placeholder=\"배송 요청사항\"\n//     onChange={handleInputChange}\n//   />\n//   <select name=\"paymentMethodId\" onChange={handleInputChange}>\n//     <option value=\"\">결제 수단 선택</option>\n//     <option value=\"1\">신용카드</option>\n//     <option value=\"2\">계좌이체</option>\n//     <option value=\"3\">기타</option>\n//   </select>\n//         <div className=\"order-form\">\n//           <h3>상품 정보</h3>\n//           <div className=\"product-info\">\n//             {product.product_name ? ( // productName이 존재하는 경우에만 상품 정보 렌더링\n//               <>\n//                 <h2>{product.product_name}</h2>\n//                 <p>가격: ${product.product_price}</p>\n//                 <p>색상: {product.product_color}</p>\n//                 <p>사이즈: {product.product_size}</p>\n//               </>\n//             ) : (\n//               <p>상품 정보를 불러오는 중...</p> // 상품 정보가 아직 로드되지 않았을 경우\n//             )}\n//           </div>\n//           <div className=\"payment-button\">\n//             <button onClick={submitOrder}>주문하기</button>\n//           </div>\n//           {paymentResult && <p>{paymentResult}</p>}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default App;\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\n// 설정 파일로부터 API URL 불러오기 (예: http://localhost:8090)\nimport API_URL from \"./config\";\n\nconst App = () => {\n  const [product, setProduct] = useState(null);\n  const [orderInfo, setOrderInfo] = useState({\n    deliveryAddress: \"\",\n    recipient: \"\",\n    deliveryInstruction: \"\",\n    quantity: 1, // 기본 수량을 1로 설정\n  });\n  const [paymentResult, setPaymentResult] = useState(\"\");\n\n  // 단일 상품 정보를 불러오는 효과\n  useEffect(() => {\n    const fetchProduct = async () => {\n      try {\n        const response = await axios.get(`${API_URL}/product/content/3`);\n        setProduct(response.data); // 단일 상품 정보를 상태에 저장\n      } catch (error) {\n        console.error(\"Error fetching product:\", error);\n      }\n    };\n    fetchProduct();\n  }, []);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setOrderInfo({ ...orderInfo, [name]: value });\n  };\n\n  const handleQuantityChange = (e) => {\n    setOrderInfo({ ...orderInfo, quantity: parseInt(e.target.value, 10) });\n  };\n\n  const submitOrder = async () => {\n    try {\n      const response = await axios.post(`${API_URL}/orders`, {\n        ...orderInfo,\n        products: [\n          {\n            productId: product.product_id,\n            quantity: 1, // 예시로 1을 사용, 실제 양식에 맞게 수정 필요\n          },\n        ],\n        orderAmount: product.productPrice, // 예시로 productPrice 사용, 실제 계산 로직 필요\n      });\n      if (response.status === 200) {\n        setPaymentResult(\"주문이 성공적으로 처리되었습니다.\");\n      }\n    } catch (error) {\n      console.error(\"주문 처리 중 오류가 발생했습니다.\", error);\n      setPaymentResult(\"주문 처리 중 오류가 발생했습니다.\");\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"order-form\">\n        <h2>주문 및 결제</h2>\n        <input\n          type=\"text\"\n          name=\"deliveryAddress\"\n          placeholder=\"배송지\"\n          onChange={handleInputChange}\n        />\n        <input\n          type=\"text\"\n          name=\"recipient\"\n          placeholder=\"받는 사람\"\n          onChange={handleInputChange}\n        />\n        <input\n          type=\"text\"\n          name=\"deliveryInstruction\"\n          placeholder=\"배송 요청사항\"\n          onChange={handleInputChange}\n        />\n        <select name=\"paymentMethodId\" onChange={handleInputChange}>\n          <option value=\"\">결제 수단 선택</option>\n          <option value=\"1\">신용카드</option>\n          <option value=\"2\">계좌이체</option>\n          <option value=\"3\">기타</option>\n        </select>\n      </div>\n      {product && (\n        <>\n          <div>\n            <h2>주문 및 결제</h2>\n            <p>제품명: {product.product_name}</p>\n            <p>가격: ${product.product_price}</p>\n            <label>\n              갯수 선택:\n              <input\n                type=\"number\"\n                name=\"quantity\"\n                value={orderInfo.quantity}\n                onChange={handleQuantityChange}\n              />\n            </label>\n            <button onClick={submitOrder}>Submit Order</button>\n          </div>\n\n          {paymentResult && <div>{paymentResult}</div>}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;;AAElB;AACA,OAAOC,OAAO,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE/B,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC;IACzCc,eAAe,EAAE,EAAE;IACnBC,SAAS,EAAE,EAAE;IACbC,mBAAmB,EAAE,EAAE;IACvBC,QAAQ,EAAE,CAAC,CAAE;EACf,CAAC,CAAC;EACF,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;;EAEtD;EACAC,SAAS,CAAC,MAAM;IACd,MAAMmB,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,GAAG,CAAE,GAAEnB,OAAQ,oBAAmB,CAAC;QAChEQ,UAAU,CAACU,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;MAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF,CAAC;IACDJ,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,iBAAiB,GAAIC,CAAC,IAAK;IAC/B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCjB,YAAY,CAAC;MAAE,GAAGD,SAAS;MAAE,CAACgB,IAAI,GAAGC;IAAM,CAAC,CAAC;EAC/C,CAAC;EAED,MAAME,oBAAoB,GAAIJ,CAAC,IAAK;IAClCd,YAAY,CAAC;MAAE,GAAGD,SAAS;MAAEK,QAAQ,EAAEe,QAAQ,CAACL,CAAC,CAACG,MAAM,CAACD,KAAK,EAAE,EAAE;IAAE,CAAC,CAAC;EACxE,CAAC;EAED,MAAMI,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMZ,QAAQ,GAAG,MAAMnB,KAAK,CAACgC,IAAI,CAAE,GAAE/B,OAAQ,SAAQ,EAAE;QACrD,GAAGS,SAAS;QACZuB,QAAQ,EAAE,CACR;UACEC,SAAS,EAAE1B,OAAO,CAAC2B,UAAU;UAC7BpB,QAAQ,EAAE,CAAC,CAAE;QACf,CAAC,CACF;QACDqB,WAAW,EAAE5B,OAAO,CAAC6B,YAAY,CAAE;MACrC,CAAC,CAAC;MACF,IAAIlB,QAAQ,CAACmB,MAAM,KAAK,GAAG,EAAE;QAC3BrB,gBAAgB,CAAC,oBAAoB,CAAC;MACxC;IACF,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3CL,gBAAgB,CAAC,qBAAqB,CAAC;IACzC;EACF,CAAC;EAED,oBACEd,OAAA;IAAKoC,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBrC,OAAA;MAAKoC,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzBrC,OAAA;QAAAqC,QAAA,EAAI;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChBzC,OAAA;QACE0C,IAAI,EAAC,MAAM;QACXnB,IAAI,EAAC,iBAAiB;QACtBoB,WAAW,EAAC,oBAAK;QACjBC,QAAQ,EAAEvB;MAAkB;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC,eACFzC,OAAA;QACE0C,IAAI,EAAC,MAAM;QACXnB,IAAI,EAAC,WAAW;QAChBoB,WAAW,EAAC,2BAAO;QACnBC,QAAQ,EAAEvB;MAAkB;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC,eACFzC,OAAA;QACE0C,IAAI,EAAC,MAAM;QACXnB,IAAI,EAAC,qBAAqB;QAC1BoB,WAAW,EAAC,uCAAS;QACrBC,QAAQ,EAAEvB;MAAkB;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC,eACFzC,OAAA;QAAQuB,IAAI,EAAC,iBAAiB;QAACqB,QAAQ,EAAEvB,iBAAkB;QAAAgB,QAAA,gBACzDrC,OAAA;UAAQwB,KAAK,EAAC,EAAE;UAAAa,QAAA,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAClCzC,OAAA;UAAQwB,KAAK,EAAC,GAAG;UAAAa,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC/BzC,OAAA;UAAQwB,KAAK,EAAC,GAAG;UAAAa,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC/BzC,OAAA;UAAQwB,KAAK,EAAC,GAAG;UAAAa,QAAA,EAAC;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EACLpC,OAAO,iBACNL,OAAA,CAAAE,SAAA;MAAAmC,QAAA,gBACErC,OAAA;QAAAqC,QAAA,gBACErC,OAAA;UAAAqC,QAAA,EAAI;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAChBzC,OAAA;UAAAqC,QAAA,GAAG,sBAAK,EAAChC,OAAO,CAACwC,YAAY;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAClCzC,OAAA;UAAAqC,QAAA,GAAG,iBAAK,EAAChC,OAAO,CAACyC,aAAa;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACnCzC,OAAA;UAAAqC,QAAA,GAAO,4BAEL,eAAArC,OAAA;YACE0C,IAAI,EAAC,QAAQ;YACbnB,IAAI,EAAC,UAAU;YACfC,KAAK,EAAEjB,SAAS,CAACK,QAAS;YAC1BgC,QAAQ,EAAElB;UAAqB;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC,eACRzC,OAAA;UAAQ+C,OAAO,EAAEnB,WAAY;UAAAS,QAAA,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC,EAEL5B,aAAa,iBAAIb,OAAA;QAAAqC,QAAA,EAAMxB;MAAa;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA,eAC5C,CACH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACrC,EAAA,CAzGID,GAAG;AAAA6C,EAAA,GAAH7C,GAAG;AA2GT,eAAeA,GAAG;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}