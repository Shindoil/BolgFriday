{"ast":null,"code":"var _jsxFileName = \"D:\\\\ai_chat\\\\react-workspace\\\\blogfriday\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n// import \"./App.css\";\n\n// const App = () => {\n//   // 상태 관리\n//   const [deliveryInfo, setDeliveryInfo] = useState({\n//     deliveryAddress: \"\",\n//     recipient: \"\",\n//     deliveryInstruction: \"\",\n//   });\n//   const [orderDetails, setOrderDetails] = useState({\n//     productId: 1, // 예시 ID, 실제 상품 ID로 대체 필요\n//     quantity: 1,\n//   });\n\n//   const [paymentMethod, setPaymentMethod] = useState(\"\"); // 결제 수단 ID\n//   const [paymentResult, setPaymentResult] = useState(\"\"); // 결제 결과 메시지\n\n//   // 사용자 입력 처리 함수\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setDeliveryInfo((prev) => ({\n//       ...prev,\n//       [name]: value,\n//     }));\n//   };\n\n//   // 결제 처리 함수\n//   const handlePayment = async () => {\n//     try {\n//       // 주문 정보 백엔드로 전송\n//       const orderResponse = await axios.post(\"/orders\", {\n//         ...deliveryInfo,\n//         ...orderDetails,\n//       });\n\n//       if (orderResponse.status === 201) {\n//         // 결제 요청\n//         const paymentResponse = await axios.post(\"/payments\", {\n//           orderId: orderResponse.data.orderId,\n//           methodId: paymentMethod,\n//           amount: 26702, // 결제 금액, 실제 계산 로직 필요\n//         });\n\n//         if (paymentResponse.status === 200) {\n//           setPaymentResult(\"결제가 성공적으로 처리되었습니다.\");\n//         }\n//       }\n//     } catch (error) {\n//       setPaymentResult(\"결제 처리 중 오류가 발생했습니다.\");\n//       console.error(\"Payment error:\", error);\n//     }\n//   };\n//   return (\n//     <div className=\"app\">\n//       {/* 배송 정보 입력 폼 */}\n//       <div className=\"order-payment\">\n//         <h2>Order / Payment</h2>\n//         <input\n//           type=\"text\"\n//           name=\"deliveryAddress\"\n//           placeholder=\"배송지\"\n//           onChange={handleChange}\n//         />\n//         <input\n//           type=\"text\"\n//           name=\"recipient\"\n//           placeholder=\"배송지 변경\"\n//           onChange={handleChange}\n//         />\n//         <input\n//           type=\"text\"\n//           name=\"deliveryInstruction\"\n//           placeholder=\"부재시 집 앞에 넣어주세요\"\n//           onChange={handleChange}\n//         />\n//       </div>\n\n//       <div className=\"order-details\">\n//         {/* 상품 정보, 수량, 가격 등 표시 */}\n//         <h3>토스간편결제 + 쿠폰</h3>\n//         <p>결제 금액: 26,702원</p>\n//         <table>\n//           <thead>\n//             <tr>\n//               <th>상품</th>\n//               <th>수량</th>\n//               <th>판매가</th>\n//               <th>배송</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             <tr>\n//               <td>\n//                 <img src=\"product-image.jpg\" alt=\"Product\" />\n//                 <span>[토르시]</span>\n//                 <span>데일리 무지 숏슬리브 - White</span>\n//                 <span>옵션: 화이트/M</span>\n//               </td>\n//               <td>1개</td>\n//               <td>33,800원</td>\n//               <td>\n//                 예상 발송일\n//                 <br />\n//                 (일)\n//               </td>\n//             </tr>\n//           </tbody>\n//           <tfoot>\n//             <tr>\n//               <td colSpan=\"2\">상품 합계</td>\n//               <td>49,500원</td>\n//               <td></td>\n//             </tr>\n//             <tr>\n//               <td colSpan=\"2\">배송비</td>\n//               <td>배송비 무료</td>\n//               <td></td>\n//             </tr>\n//             <tr>\n//               <td colSpan=\"2\">상품 할인</td>\n//               <td>-15,700원</td>\n//               <td></td>\n//             </tr>\n//             <tr>\n//               <td colSpan=\"2\">총 할인 금액</td>\n//               <td>-22,798원</td>\n//               <td></td>\n//             </tr>\n//             <tr>\n//               <td colSpan=\"2\">최종 결제 금액</td>\n//               <td>26,702원</td>\n//               <td></td>\n//             </tr>\n//           </tfoot>\n//         </table>\n//       </div>\n\n//       {/* 결제 정보 및 버튼 */}\n//       <div className=\"payment-button\">\n//         <button onClick={handlePayment}>결제하기</button>\n//       </div>\n//       {/* 결제 결과 메시지 */}\n//       {paymentResult && <p>{paymentResult}</p>}\n//     </div>\n//   );\n// };\n\n// export default App;\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [orderInfo, setOrderInfo] = useState({\n    deliveryAddress: \"\",\n    recipient: \"\",\n    deliveryInstruction: \"\",\n    paymentMethodId: \"\"\n  });\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    const fetchProducts = async () => {\n      try {\n        // 백엔드 API로부터 상품 데이터를 불러옵니다.\n        const response = await axios.get(`${process.env.REACT_APP_API_URL}/products`);\n        setProducts(response.data); // 상태를 업데이트하여 화면에 표시합니다.\n      } catch (error) {\n        console.error(\"상품 데이터를 불러오는 중 오류가 발생했습니다:\", error);\n      }\n    };\n    fetchProducts();\n  }, []); // 빈 배열을 전달하여 컴포넌트가 마운트될 때 단 한 번만 실행됩니다.\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setOrderInfo({\n      ...orderInfo,\n      [name]: value\n    });\n  };\n  const submitOrder = async () => {\n    const orderAmount = products.productPrice * products.quantity; // 결제 금액 계산\n    try {\n      // 주문 정보 및 결제 금액을 포함하여 백엔드로 전송\n      const response = await axios.post(`${process.env.REACT_APP_API_URL}/orders`, {\n        ...orderInfo,\n        productId: products.productId,\n        quantity: products.quantity,\n        orderAmount\n      });\n      if (response.status === 200) {\n        alert(\"주문이 성공적으로 처리되었습니다.\");\n      }\n    } catch (error) {\n      console.error(\"주문 처리 중 오류가 발생했습니다.\", error);\n      alert(\"주문 처리 중 오류가 발생했습니다.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uC8FC\\uBB38 \\uBC0F \\uACB0\\uC81C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"deliveryAddress\",\n        placeholder: \"\\uBC30\\uC1A1\\uC9C0\",\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"recipient\",\n        placeholder: \"\\uBC1B\\uB294 \\uC0AC\\uB78C\",\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"deliveryInstruction\",\n        placeholder: \"\\uBC30\\uC1A1 \\uC694\\uCCAD\\uC0AC\\uD56D\",\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"paymentMethodId\",\n        onChange: handleInputChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"\\uACB0\\uC81C \\uC218\\uB2E8 \\uC120\\uD0DD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"1\",\n          children: \"\\uC2E0\\uC6A9\\uCE74\\uB4DC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2\",\n          children: \"\\uACC4\\uC88C\\uC774\\uCCB4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"3\",\n          children: \"\\uAE30\\uD0C0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uC0C1\\uD488 \\uBAA9\\uB85D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"product-list\",\n        children: products.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"product\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: product.productName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\uAC00\\uACA9: $\", product.productPrice]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\uC218\\uB7C9: \", product.quantity]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\uC0C9\\uC0C1: \", product.productColor]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\uC0AC\\uC774\\uC988: \", product.productSize]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this)]\n        }, product.productId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"1Akv0eBJCRQcugyfiacq/RwF+R4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","orderInfo","setOrderInfo","deliveryAddress","recipient","deliveryInstruction","paymentMethodId","products","setProducts","fetchProducts","response","get","process","env","REACT_APP_API_URL","data","error","console","handleInputChange","e","name","value","target","submitOrder","orderAmount","productPrice","quantity","post","productId","status","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","map","product","productName","productColor","productSize","_c","$RefreshReg$"],"sources":["D:/ai_chat/react-workspace/blogfriday/src/App.js"],"sourcesContent":["// import React, { useState } from \"react\";\n// import axios from \"axios\";\n// import \"./App.css\";\n\n// const App = () => {\n//   // 상태 관리\n//   const [deliveryInfo, setDeliveryInfo] = useState({\n//     deliveryAddress: \"\",\n//     recipient: \"\",\n//     deliveryInstruction: \"\",\n//   });\n//   const [orderDetails, setOrderDetails] = useState({\n//     productId: 1, // 예시 ID, 실제 상품 ID로 대체 필요\n//     quantity: 1,\n//   });\n\n//   const [paymentMethod, setPaymentMethod] = useState(\"\"); // 결제 수단 ID\n//   const [paymentResult, setPaymentResult] = useState(\"\"); // 결제 결과 메시지\n\n//   // 사용자 입력 처리 함수\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setDeliveryInfo((prev) => ({\n//       ...prev,\n//       [name]: value,\n//     }));\n//   };\n\n//   // 결제 처리 함수\n//   const handlePayment = async () => {\n//     try {\n//       // 주문 정보 백엔드로 전송\n//       const orderResponse = await axios.post(\"/orders\", {\n//         ...deliveryInfo,\n//         ...orderDetails,\n//       });\n\n//       if (orderResponse.status === 201) {\n//         // 결제 요청\n//         const paymentResponse = await axios.post(\"/payments\", {\n//           orderId: orderResponse.data.orderId,\n//           methodId: paymentMethod,\n//           amount: 26702, // 결제 금액, 실제 계산 로직 필요\n//         });\n\n//         if (paymentResponse.status === 200) {\n//           setPaymentResult(\"결제가 성공적으로 처리되었습니다.\");\n//         }\n//       }\n//     } catch (error) {\n//       setPaymentResult(\"결제 처리 중 오류가 발생했습니다.\");\n//       console.error(\"Payment error:\", error);\n//     }\n//   };\n//   return (\n//     <div className=\"app\">\n//       {/* 배송 정보 입력 폼 */}\n//       <div className=\"order-payment\">\n//         <h2>Order / Payment</h2>\n//         <input\n//           type=\"text\"\n//           name=\"deliveryAddress\"\n//           placeholder=\"배송지\"\n//           onChange={handleChange}\n//         />\n//         <input\n//           type=\"text\"\n//           name=\"recipient\"\n//           placeholder=\"배송지 변경\"\n//           onChange={handleChange}\n//         />\n//         <input\n//           type=\"text\"\n//           name=\"deliveryInstruction\"\n//           placeholder=\"부재시 집 앞에 넣어주세요\"\n//           onChange={handleChange}\n//         />\n//       </div>\n\n//       <div className=\"order-details\">\n//         {/* 상품 정보, 수량, 가격 등 표시 */}\n//         <h3>토스간편결제 + 쿠폰</h3>\n//         <p>결제 금액: 26,702원</p>\n//         <table>\n//           <thead>\n//             <tr>\n//               <th>상품</th>\n//               <th>수량</th>\n//               <th>판매가</th>\n//               <th>배송</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             <tr>\n//               <td>\n//                 <img src=\"product-image.jpg\" alt=\"Product\" />\n//                 <span>[토르시]</span>\n//                 <span>데일리 무지 숏슬리브 - White</span>\n//                 <span>옵션: 화이트/M</span>\n//               </td>\n//               <td>1개</td>\n//               <td>33,800원</td>\n//               <td>\n//                 예상 발송일\n//                 <br />\n//                 (일)\n//               </td>\n//             </tr>\n//           </tbody>\n//           <tfoot>\n//             <tr>\n//               <td colSpan=\"2\">상품 합계</td>\n//               <td>49,500원</td>\n//               <td></td>\n//             </tr>\n//             <tr>\n//               <td colSpan=\"2\">배송비</td>\n//               <td>배송비 무료</td>\n//               <td></td>\n//             </tr>\n//             <tr>\n//               <td colSpan=\"2\">상품 할인</td>\n//               <td>-15,700원</td>\n//               <td></td>\n//             </tr>\n//             <tr>\n//               <td colSpan=\"2\">총 할인 금액</td>\n//               <td>-22,798원</td>\n//               <td></td>\n//             </tr>\n//             <tr>\n//               <td colSpan=\"2\">최종 결제 금액</td>\n//               <td>26,702원</td>\n//               <td></td>\n//             </tr>\n//           </tfoot>\n//         </table>\n//       </div>\n\n//       {/* 결제 정보 및 버튼 */}\n//       <div className=\"payment-button\">\n//         <button onClick={handlePayment}>결제하기</button>\n//       </div>\n//       {/* 결제 결과 메시지 */}\n//       {paymentResult && <p>{paymentResult}</p>}\n//     </div>\n//   );\n// };\n\n// export default App;\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nconst App = () => {\n  const [orderInfo, setOrderInfo] = useState({\n    deliveryAddress: \"\",\n    recipient: \"\",\n    deliveryInstruction: \"\",\n    paymentMethodId: \"\",\n  });\n\n  const [products, setProducts] = useState([]);\n\n  useEffect(() => {\n    const fetchProducts = async () => {\n      try {\n        // 백엔드 API로부터 상품 데이터를 불러옵니다.\n        const response = await axios.get(\n          `${process.env.REACT_APP_API_URL}/products`\n        );\n        setProducts(response.data); // 상태를 업데이트하여 화면에 표시합니다.\n      } catch (error) {\n        console.error(\"상품 데이터를 불러오는 중 오류가 발생했습니다:\", error);\n      }\n    };\n\n    fetchProducts();\n  }, []); // 빈 배열을 전달하여 컴포넌트가 마운트될 때 단 한 번만 실행됩니다.\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setOrderInfo({ ...orderInfo, [name]: value });\n  };\n\n  const submitOrder = async () => {\n    const orderAmount = products.productPrice * products.quantity; // 결제 금액 계산\n    try {\n      // 주문 정보 및 결제 금액을 포함하여 백엔드로 전송\n      const response = await axios.post(\n        `${process.env.REACT_APP_API_URL}/orders`,\n        {\n          ...orderInfo,\n          productId: products.productId,\n          quantity: products.quantity,\n          orderAmount,\n        }\n      );\n      if (response.status === 200) {\n        alert(\"주문이 성공적으로 처리되었습니다.\");\n      }\n    } catch (error) {\n      console.error(\"주문 처리 중 오류가 발생했습니다.\", error);\n      alert(\"주문 처리 중 오류가 발생했습니다.\");\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"order-form\">\n        <h2>주문 및 결제</h2>\n        <input\n          type=\"text\"\n          name=\"deliveryAddress\"\n          placeholder=\"배송지\"\n          onChange={handleInputChange}\n        />\n        <input\n          type=\"text\"\n          name=\"recipient\"\n          placeholder=\"받는 사람\"\n          onChange={handleInputChange}\n        />\n        <input\n          type=\"text\"\n          name=\"deliveryInstruction\"\n          placeholder=\"배송 요청사항\"\n          onChange={handleInputChange}\n        />\n        <select name=\"paymentMethodId\" onChange={handleInputChange}>\n          <option value=\"\">결제 수단 선택</option>\n          <option value=\"1\">신용카드</option>\n          <option value=\"2\">계좌이체</option>\n          <option value=\"3\">기타</option>\n        </select>\n        <h3>상품 목록</h3>\n        <div className=\"product-list\">\n          {products.map((product) => (\n            <div key={product.productId} className=\"product\">\n              <h3>{product.productName}</h3>\n              <p>가격: ${product.productPrice}</p>\n              <p>수량: {product.quantity}</p>\n              <p>색상: {product.productColor}</p>\n              <p>사이즈: {product.productSize}</p>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}