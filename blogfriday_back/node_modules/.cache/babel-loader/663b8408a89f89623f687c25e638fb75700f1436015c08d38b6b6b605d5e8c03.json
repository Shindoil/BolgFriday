{"ast":null,"code":"var _jsxFileName = \"D:\\\\ai_chat\\\\react-workspace\\\\blogfriday\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import \"./App.css\";\n\n// const API_URL = \"http://localhost:8090\";\n\n// const App = () => {\n//   const [Orders, setOrderInfo] = useState({\n//     deliveryAddress: \"\",\n//     deliveryInstruction: \"\",\n//     quantity: 1,\n//   });\n//   const [product, setProduct] = useState(null);\n//   const [paymentResult, setPaymentResult] = useState(\"\");\n\n//   useEffect(() => {\n//     const fetchProduct = async () => {\n//       try {\n//         const response = await axios.get(`${API_URL}/product/content/3`);\n//         setProduct(response.data);\n//       } catch (error) {\n//         console.error(\"Error fetching product:\", error);\n//       }\n//     };\n//     fetchProduct();\n//   }, []);\n\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setOrderInfo((prev) => ({ ...prev, [name]: value }));\n//   };\n\n//   const handleQuantityChange = (e) => {\n//     setOrderInfo((prev) => ({\n//       ...prev,\n//       quantity: parseInt(e.target.value, 10) || 1,\n//     }));\n//   };\n\n//   const submitOrder = async () => {\n//     try {\n//       const orderAmount = product.product_price * Orders.quantity;\n//       const response = await axios.post(`${API_URL}/api/orders`, {\n//         ...Orders,\n//         products: [\n//           { productId: product.product_code, quantity: Orders.quantity },\n//         ],\n//         orderAmount,\n//       });\n//       if (response.status === 200) {\n//         setPaymentResult(\"주문이 성공적으로 처리되었습니다.\");\n//       } else {\n//         setPaymentResult(\"주문 처리에 실패했습니다.\");\n//       }\n//     } catch (error) {\n//       console.error(\"주문 처리 중 오류가 발생했습니다.\", error);\n//       setPaymentResult(\"주문 처리 중 오류가 발생했습니다.\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"app\">\n//       <div className=\"order-form\">\n//         <h2>주문 및 결제</h2>\n//         <input\n//           type=\"text\"\n//           name=\"deliveryAddress\"\n//           placeholder=\"배송지\"\n//           value={Orders.deliveryAddress}\n//           onChange={handleInputChange}\n//         />\n//         <input\n//           type=\"text\"\n//           name=\"recipient\"\n//           placeholder=\"받는 사람\"\n//           value={Orders.recipient}\n//           onChange={handleInputChange}\n//         />\n//         <input\n//           type=\"text\"\n//           name=\"deliveryInstruction\"\n//           placeholder=\"배송 요청사항\"\n//           value={Orders.deliveryInstruction}\n//           onChange={handleInputChange}\n//         />\n\n//         {product && (\n//           <div className=\"product-info\">\n//             <h3>상품 정보</h3>\n//             <p>제품명: {product.product_name}</p>\n//             <p>가격: {product.product_price}원</p>\n//             <label>\n//               수량 선택:\n//               <input\n//                 type=\"number\"\n//                 name=\"quantity\"\n//                 value={Orders.quantity}\n//                 onChange={handleQuantityChange}\n//               />\n//             </label>\n//             <p>총 금액: ${product.product_price * Orders.quantity}</p>\n//           </div>\n//         )}\n//         <button onClick={submitOrder}>주문하기</button>\n//       </div>\n//       {paymentResult && <p>{paymentResult}</p>}\n//     </div>\n//   );\n// };\n\n// export default App;\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:8090\";\nconst App = () => {\n  _s();\n  const [orderInfo, setOrderInfo] = useState({\n    deliveryAddress: \"\",\n    deliveryInstruction: \"\",\n    quantity: 1\n  });\n  const [product, setProduct] = useState({\n    product_code: 3,\n    product_name: \"\",\n    product_price: 0\n  });\n  const [paymentResult, setPaymentResult] = useState(\"\");\n  useEffect(() => {\n    const fetchProduct = async () => {\n      try {\n        const response = await axios.get(`${API_URL}/product/content/${product.product_code}`);\n        setProduct(response.data);\n      } catch (error) {\n        console.error(\"Error fetching product:\", error);\n      }\n    };\n    fetchProduct();\n  }, []);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setOrderInfo(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleQuantityChange = e => {\n    setOrderInfo(prev => ({\n      ...prev,\n      quantity: parseInt(e.target.value, 10) || 1\n    }));\n  };\n  const submitOrder = async () => {\n    try {\n      const orderAmount = product.product_price * orderInfo.quantity;\n      const response = await axios.post(`${API_URL}/api/orders`, {\n        ...orderInfo,\n        products: [{\n          productId: product.product_code,\n          quantity: orderInfo.quantity\n        }],\n        orderAmount\n      });\n      if (response.status === 201) {\n        setPaymentResult(\"주문이 성공적으로 처리되었습니다.\");\n        setOrderInfo({\n          deliveryAddress: \"\",\n          deliveryInstruction: \"\",\n          quantity: 1\n        });\n      } else {\n        setPaymentResult(\"주문 처리에 실패했습니다.\");\n      }\n    } catch (error) {\n      console.error(\"주문 처리 중 오류가 발생했습니다.\", error);\n      setPaymentResult(\"주문 처리 중 오류가 발생했습니다.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uC8FC\\uBB38 \\uBC0F \\uACB0\\uC81C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"deliveryAddress\",\n        placeholder: \"\\uBC30\\uC1A1\\uC9C0\",\n        value: orderInfo.deliveryAddress,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"deliveryInstruction\",\n        placeholder: \"\\uBC30\\uC1A1 \\uC694\\uCCAD\\uC0AC\\uD56D\",\n        value: orderInfo.deliveryInstruction,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), product.product_name && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"product-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uC0C1\\uD488 \\uC815\\uBCF4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uC81C\\uD488\\uBA85: \", product.product_name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uAC00\\uACA9: \", product.product_price, \"\\uC6D0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"\\uC218\\uB7C9 \\uC120\\uD0DD:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"quantity\",\n            value: orderInfo.quantity,\n            onChange: handleQuantityChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uCD1D \\uAE08\\uC561: \", product.product_price * orderInfo.quantity, \"\\uC6D0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: submitOrder,\n        children: \"\\uC8FC\\uBB38\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), paymentResult && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: paymentResult\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"vt8o8Q06D4u6amuebeefVXBENOo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","API_URL","App","_s","orderInfo","setOrderInfo","deliveryAddress","deliveryInstruction","quantity","product","setProduct","product_code","product_name","product_price","paymentResult","setPaymentResult","fetchProduct","response","get","data","error","console","handleInputChange","e","name","value","target","prev","handleQuantityChange","parseInt","submitOrder","orderAmount","post","products","productId","status","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","_c","$RefreshReg$"],"sources":["D:/ai_chat/react-workspace/blogfriday/src/App.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import \"./App.css\";\n\n// const API_URL = \"http://localhost:8090\";\n\n// const App = () => {\n//   const [Orders, setOrderInfo] = useState({\n//     deliveryAddress: \"\",\n//     deliveryInstruction: \"\",\n//     quantity: 1,\n//   });\n//   const [product, setProduct] = useState(null);\n//   const [paymentResult, setPaymentResult] = useState(\"\");\n\n//   useEffect(() => {\n//     const fetchProduct = async () => {\n//       try {\n//         const response = await axios.get(`${API_URL}/product/content/3`);\n//         setProduct(response.data);\n//       } catch (error) {\n//         console.error(\"Error fetching product:\", error);\n//       }\n//     };\n//     fetchProduct();\n//   }, []);\n\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setOrderInfo((prev) => ({ ...prev, [name]: value }));\n//   };\n\n//   const handleQuantityChange = (e) => {\n//     setOrderInfo((prev) => ({\n//       ...prev,\n//       quantity: parseInt(e.target.value, 10) || 1,\n//     }));\n//   };\n\n//   const submitOrder = async () => {\n//     try {\n//       const orderAmount = product.product_price * Orders.quantity;\n//       const response = await axios.post(`${API_URL}/api/orders`, {\n//         ...Orders,\n//         products: [\n//           { productId: product.product_code, quantity: Orders.quantity },\n//         ],\n//         orderAmount,\n//       });\n//       if (response.status === 200) {\n//         setPaymentResult(\"주문이 성공적으로 처리되었습니다.\");\n//       } else {\n//         setPaymentResult(\"주문 처리에 실패했습니다.\");\n//       }\n//     } catch (error) {\n//       console.error(\"주문 처리 중 오류가 발생했습니다.\", error);\n//       setPaymentResult(\"주문 처리 중 오류가 발생했습니다.\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"app\">\n//       <div className=\"order-form\">\n//         <h2>주문 및 결제</h2>\n//         <input\n//           type=\"text\"\n//           name=\"deliveryAddress\"\n//           placeholder=\"배송지\"\n//           value={Orders.deliveryAddress}\n//           onChange={handleInputChange}\n//         />\n//         <input\n//           type=\"text\"\n//           name=\"recipient\"\n//           placeholder=\"받는 사람\"\n//           value={Orders.recipient}\n//           onChange={handleInputChange}\n//         />\n//         <input\n//           type=\"text\"\n//           name=\"deliveryInstruction\"\n//           placeholder=\"배송 요청사항\"\n//           value={Orders.deliveryInstruction}\n//           onChange={handleInputChange}\n//         />\n\n//         {product && (\n//           <div className=\"product-info\">\n//             <h3>상품 정보</h3>\n//             <p>제품명: {product.product_name}</p>\n//             <p>가격: {product.product_price}원</p>\n//             <label>\n//               수량 선택:\n//               <input\n//                 type=\"number\"\n//                 name=\"quantity\"\n//                 value={Orders.quantity}\n//                 onChange={handleQuantityChange}\n//               />\n//             </label>\n//             <p>총 금액: ${product.product_price * Orders.quantity}</p>\n//           </div>\n//         )}\n//         <button onClick={submitOrder}>주문하기</button>\n//       </div>\n//       {paymentResult && <p>{paymentResult}</p>}\n//     </div>\n//   );\n// };\n\n// export default App;\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\nconst API_URL = \"http://localhost:8090\";\n\nconst App = () => {\n  const [orderInfo, setOrderInfo] = useState({\n    deliveryAddress: \"\",\n    deliveryInstruction: \"\",\n    quantity: 1,\n  });\n  const [product, setProduct] = useState({\n    product_code: 3,\n    product_name: \"\",\n    product_price: 0,\n  });\n  const [paymentResult, setPaymentResult] = useState(\"\");\n\n  useEffect(() => {\n    const fetchProduct = async () => {\n      try {\n        const response = await axios.get(\n          `${API_URL}/product/content/${product.product_code}`\n        );\n        setProduct(response.data);\n      } catch (error) {\n        console.error(\"Error fetching product:\", error);\n      }\n    };\n    fetchProduct();\n  }, []);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setOrderInfo((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const handleQuantityChange = (e) => {\n    setOrderInfo((prev) => ({\n      ...prev,\n      quantity: parseInt(e.target.value, 10) || 1,\n    }));\n  };\n\n  const submitOrder = async () => {\n    try {\n      const orderAmount = product.product_price * orderInfo.quantity;\n      const response = await axios.post(`${API_URL}/api/orders`, {\n        ...orderInfo,\n        products: [\n          {\n            productId: product.product_code,\n            quantity: orderInfo.quantity,\n          },\n        ],\n        orderAmount,\n      });\n      if (response.status === 201) {\n        setPaymentResult(\"주문이 성공적으로 처리되었습니다.\");\n        setOrderInfo({\n          deliveryAddress: \"\",\n          deliveryInstruction: \"\",\n          quantity: 1,\n        });\n      } else {\n        setPaymentResult(\"주문 처리에 실패했습니다.\");\n      }\n    } catch (error) {\n      console.error(\"주문 처리 중 오류가 발생했습니다.\", error);\n      setPaymentResult(\"주문 처리 중 오류가 발생했습니다.\");\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"order-form\">\n        <h2>주문 및 결제</h2>\n        <input\n          type=\"text\"\n          name=\"deliveryAddress\"\n          placeholder=\"배송지\"\n          value={orderInfo.deliveryAddress}\n          onChange={handleInputChange}\n        />\n        <input\n          type=\"text\"\n          name=\"deliveryInstruction\"\n          placeholder=\"배송 요청사항\"\n          value={orderInfo.deliveryInstruction}\n          onChange={handleInputChange}\n        />\n        {product.product_name && (\n          <div className=\"product-info\">\n            <h3>상품 정보</h3>\n            <p>제품명: {product.product_name}</p>\n            <p>가격: {product.product_price}원</p>\n            <label>\n              수량 선택:\n              <input\n                type=\"number\"\n                name=\"quantity\"\n                value={orderInfo.quantity}\n                onChange={handleQuantityChange}\n              />\n            </label>\n            <p>총 금액: {product.product_price * orderInfo.quantity}원</p>\n          </div>\n        )}\n        <button onClick={submitOrder}>주문하기</button>\n      </div>\n      {paymentResult && <p>{paymentResult}</p>}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}