{"ast":null,"code":"var _jsxFileName = \"D:\\\\ai_chat\\\\react-workspace\\\\blogfriday\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import API_URL from \"./config\";\n// import \"./App.css\";\n\n// const App = () => {\n//   const [orderInfo, setOrderInfo] = useState({\n//     deliveryAddress: \"\",\n//     recipient: \"\",\n//     deliveryInstruction: \"\",\n//     paymentMethodId: \"\",\n//   });\n\n//   // products를 배열에서 객체로 변경\n//   const [product, setProduct] = useState({});\n//   console.log(product.productName);\n//   const [paymentResult, setPaymentResult] = useState(\"\");\n\n//   useEffect(() => {\n//     const fetchProduct = async () => {\n//       try {\n//         const response = await axios.get(`${API_URL}/product/content/3`);\n//         setProduct(response.data);\n//       } catch (error) {\n//         console.error(\"상품 데이터를 불러오는 중 오류가 발생했습니다:\", error);\n//       }\n//     };\n//     fetchProduct();\n//   }, []);\n\n//   console.log(\"현재 상품 상태:\", product.product_name);\n\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setOrderInfo({ ...orderInfo, [name]: value });\n//   };\n\n//   const submitOrder = async () => {\n// try {\n//   const response = await axios.post(`${API_URL}/orders`, {\n//     ...orderInfo,\n//     products: [\n//       {\n//         productId: product.productId,\n//         quantity: 1, // 예시로 1을 사용, 실제 양식에 맞게 수정 필요\n//       },\n//     ],\n//     orderAmount: product.productPrice, // 예시로 productPrice 사용, 실제 계산 로직 필요\n//   });\n//   if (response.status === 200) {\n//     setPaymentResult(\"주문이 성공적으로 처리되었습니다.\");\n//   }\n// } catch (error) {\n//   console.error(\"주문 처리 중 오류가 발생했습니다.\", error);\n//   setPaymentResult(\"주문 처리 중 오류가 발생했습니다.\");\n// }\n//   };\n\n//   return (\n//     <div className=\"app\">\n//       {/* 렌더링 및 입력 폼 코드 */}\n// <div className=\"order-form\">\n//   <h2>주문 및 결제</h2>\n//   <input\n//     type=\"text\"\n//     name=\"deliveryAddress\"\n//     placeholder=\"배송지\"\n//     onChange={handleInputChange}\n//   />\n//   <input\n//     type=\"text\"\n//     name=\"recipient\"\n//     placeholder=\"받는 사람\"\n//     onChange={handleInputChange}\n//   />\n//   <input\n//     type=\"text\"\n//     name=\"deliveryInstruction\"\n//     placeholder=\"배송 요청사항\"\n//     onChange={handleInputChange}\n//   />\n//   <select name=\"paymentMethodId\" onChange={handleInputChange}>\n//     <option value=\"\">결제 수단 선택</option>\n//     <option value=\"1\">신용카드</option>\n//     <option value=\"2\">계좌이체</option>\n//     <option value=\"3\">기타</option>\n//   </select>\n//         <div className=\"order-form\">\n//           <h3>상품 정보</h3>\n//           <div className=\"product-info\">\n//             {product.product_name ? ( // productName이 존재하는 경우에만 상품 정보 렌더링\n//               <>\n//                 <h2>{product.product_name}</h2>\n//                 <p>가격: ${product.product_price}</p>\n//                 <p>색상: {product.product_color}</p>\n//                 <p>사이즈: {product.product_size}</p>\n//               </>\n//             ) : (\n//               <p>상품 정보를 불러오는 중...</p> // 상품 정보가 아직 로드되지 않았을 경우\n//             )}\n//           </div>\n//           <div className=\"payment-button\">\n//             <button onClick={submitOrder}>주문하기</button>\n//           </div>\n//           {paymentResult && <p>{paymentResult}</p>}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default App;\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\n// 설정 파일로부터 API URL 불러오기\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:8090\";\nconst App = () => {\n  _s();\n  const [Orders, setOrderInfo] = useState({\n    deliveryAddress: \"\",\n    deliveryInstruction: \"\",\n    quantity: 1\n  });\n  const [product, setProduct] = useState(null);\n  const [paymentResult, setPaymentResult] = useState(\"\");\n  useEffect(() => {\n    const fetchProduct = async () => {\n      try {\n        const response = await axios.get(`${API_URL}/product/content/3`);\n        setProduct(response.data);\n      } catch (error) {\n        console.error(\"Error fetching product:\", error);\n      }\n    };\n    fetchProduct();\n  }, []);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setOrderInfo(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleQuantityChange = e => {\n    setOrderInfo(prev => ({\n      ...prev,\n      quantity: parseInt(e.target.value, 10) || 1\n    }));\n  };\n  const submitOrder = async () => {\n    try {\n      const orderAmount = product.product_price * Orders.quantity;\n      const response = await axios.post(`${API_URL}/orders`, {\n        ...Orders,\n        products: [{\n          productId: product.product_code,\n          quantity: Orders.quantity\n        }],\n        orderAmount\n      });\n      if (response.status === 200) {\n        setPaymentResult(\"주문이 성공적으로 처리되었습니다.\");\n      } else {\n        setPaymentResult(\"주문 처리에 실패했습니다.\");\n      }\n    } catch (error) {\n      console.error(\"주문 처리 중 오류가 발생했습니다.\", error);\n      setPaymentResult(\"주문 처리 중 오류가 발생했습니다.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uC8FC\\uBB38 \\uBC0F \\uACB0\\uC81C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"deliveryAddress\",\n        placeholder: \"\\uBC30\\uC1A1\\uC9C0\",\n        value: Orders.deliveryAddress,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"recipient\",\n        placeholder: \"\\uBC1B\\uB294 \\uC0AC\\uB78C\",\n        value: Orders.recipient,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"deliveryInstruction\",\n        placeholder: \"\\uBC30\\uC1A1 \\uC694\\uCCAD\\uC0AC\\uD56D\",\n        value: Orders.deliveryInstruction,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), product && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"product-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uC0C1\\uD488 \\uC815\\uBCF4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uC81C\\uD488\\uBA85: \", product.product_name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uAC00\\uACA9: \", product.product_price, \"\\uC6D0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"\\uC218\\uB7C9 \\uC120\\uD0DD:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"quantity\",\n            value: Orders.quantity,\n            onChange: handleQuantityChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uCD1D \\uAE08\\uC561: $\", product.product_price * Orders.quantity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: submitOrder,\n        children: \"\\uC8FC\\uBB38\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), paymentResult && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: paymentResult\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"x9CNpAHR74o3xikbNbhq4dStyGU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","API_URL","App","_s","Orders","setOrderInfo","deliveryAddress","deliveryInstruction","quantity","product","setProduct","paymentResult","setPaymentResult","fetchProduct","response","get","data","error","console","handleInputChange","e","name","value","target","prev","handleQuantityChange","parseInt","submitOrder","orderAmount","product_price","post","products","productId","product_code","status","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","recipient","product_name","onClick","_c","$RefreshReg$"],"sources":["D:/ai_chat/react-workspace/blogfriday/src/App.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import API_URL from \"./config\";\n// import \"./App.css\";\n\n// const App = () => {\n//   const [orderInfo, setOrderInfo] = useState({\n//     deliveryAddress: \"\",\n//     recipient: \"\",\n//     deliveryInstruction: \"\",\n//     paymentMethodId: \"\",\n//   });\n\n//   // products를 배열에서 객체로 변경\n//   const [product, setProduct] = useState({});\n//   console.log(product.productName);\n//   const [paymentResult, setPaymentResult] = useState(\"\");\n\n//   useEffect(() => {\n//     const fetchProduct = async () => {\n//       try {\n//         const response = await axios.get(`${API_URL}/product/content/3`);\n//         setProduct(response.data);\n//       } catch (error) {\n//         console.error(\"상품 데이터를 불러오는 중 오류가 발생했습니다:\", error);\n//       }\n//     };\n//     fetchProduct();\n//   }, []);\n\n//   console.log(\"현재 상품 상태:\", product.product_name);\n\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setOrderInfo({ ...orderInfo, [name]: value });\n//   };\n\n//   const submitOrder = async () => {\n// try {\n//   const response = await axios.post(`${API_URL}/orders`, {\n//     ...orderInfo,\n//     products: [\n//       {\n//         productId: product.productId,\n//         quantity: 1, // 예시로 1을 사용, 실제 양식에 맞게 수정 필요\n//       },\n//     ],\n//     orderAmount: product.productPrice, // 예시로 productPrice 사용, 실제 계산 로직 필요\n//   });\n//   if (response.status === 200) {\n//     setPaymentResult(\"주문이 성공적으로 처리되었습니다.\");\n//   }\n// } catch (error) {\n//   console.error(\"주문 처리 중 오류가 발생했습니다.\", error);\n//   setPaymentResult(\"주문 처리 중 오류가 발생했습니다.\");\n// }\n//   };\n\n//   return (\n//     <div className=\"app\">\n//       {/* 렌더링 및 입력 폼 코드 */}\n// <div className=\"order-form\">\n//   <h2>주문 및 결제</h2>\n//   <input\n//     type=\"text\"\n//     name=\"deliveryAddress\"\n//     placeholder=\"배송지\"\n//     onChange={handleInputChange}\n//   />\n//   <input\n//     type=\"text\"\n//     name=\"recipient\"\n//     placeholder=\"받는 사람\"\n//     onChange={handleInputChange}\n//   />\n//   <input\n//     type=\"text\"\n//     name=\"deliveryInstruction\"\n//     placeholder=\"배송 요청사항\"\n//     onChange={handleInputChange}\n//   />\n//   <select name=\"paymentMethodId\" onChange={handleInputChange}>\n//     <option value=\"\">결제 수단 선택</option>\n//     <option value=\"1\">신용카드</option>\n//     <option value=\"2\">계좌이체</option>\n//     <option value=\"3\">기타</option>\n//   </select>\n//         <div className=\"order-form\">\n//           <h3>상품 정보</h3>\n//           <div className=\"product-info\">\n//             {product.product_name ? ( // productName이 존재하는 경우에만 상품 정보 렌더링\n//               <>\n//                 <h2>{product.product_name}</h2>\n//                 <p>가격: ${product.product_price}</p>\n//                 <p>색상: {product.product_color}</p>\n//                 <p>사이즈: {product.product_size}</p>\n//               </>\n//             ) : (\n//               <p>상품 정보를 불러오는 중...</p> // 상품 정보가 아직 로드되지 않았을 경우\n//             )}\n//           </div>\n//           <div className=\"payment-button\">\n//             <button onClick={submitOrder}>주문하기</button>\n//           </div>\n//           {paymentResult && <p>{paymentResult}</p>}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default App;\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\n// 설정 파일로부터 API URL 불러오기\nconst API_URL = \"http://localhost:8090\";\n\nconst App = () => {\n  const [Orders, setOrderInfo] = useState({\n    deliveryAddress: \"\",\n    deliveryInstruction: \"\",\n    quantity: 1,\n  });\n  const [product, setProduct] = useState(null);\n  const [paymentResult, setPaymentResult] = useState(\"\");\n\n  useEffect(() => {\n    const fetchProduct = async () => {\n      try {\n        const response = await axios.get(`${API_URL}/product/content/3`);\n        setProduct(response.data);\n      } catch (error) {\n        console.error(\"Error fetching product:\", error);\n      }\n    };\n    fetchProduct();\n  }, []);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setOrderInfo((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const handleQuantityChange = (e) => {\n    setOrderInfo((prev) => ({\n      ...prev,\n      quantity: parseInt(e.target.value, 10) || 1,\n    }));\n  };\n\n  const submitOrder = async () => {\n    try {\n      const orderAmount = product.product_price * Orders.quantity;\n      const response = await axios.post(`${API_URL}/orders`, {\n        ...Orders,\n        products: [\n          { productId: product.product_code, quantity: Orders.quantity },\n        ],\n        orderAmount,\n      });\n      if (response.status === 200) {\n        setPaymentResult(\"주문이 성공적으로 처리되었습니다.\");\n      } else {\n        setPaymentResult(\"주문 처리에 실패했습니다.\");\n      }\n    } catch (error) {\n      console.error(\"주문 처리 중 오류가 발생했습니다.\", error);\n      setPaymentResult(\"주문 처리 중 오류가 발생했습니다.\");\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"order-form\">\n        <h2>주문 및 결제</h2>\n        <input\n          type=\"text\"\n          name=\"deliveryAddress\"\n          placeholder=\"배송지\"\n          value={Orders.deliveryAddress}\n          onChange={handleInputChange}\n        />\n        <input\n          type=\"text\"\n          name=\"recipient\"\n          placeholder=\"받는 사람\"\n          value={Orders.recipient}\n          onChange={handleInputChange}\n        />\n        <input\n          type=\"text\"\n          name=\"deliveryInstruction\"\n          placeholder=\"배송 요청사항\"\n          value={Orders.deliveryInstruction}\n          onChange={handleInputChange}\n        />\n\n        {product && (\n          <div className=\"product-info\">\n            <h3>상품 정보</h3>\n            <p>제품명: {product.product_name}</p>\n            <p>가격: {product.product_price}원</p>\n            <label>\n              수량 선택:\n              <input\n                type=\"number\"\n                name=\"quantity\"\n                value={Orders.quantity}\n                onChange={handleQuantityChange}\n              />\n            </label>\n            <p>총 금액: ${product.product_price * Orders.quantity}</p>\n          </div>\n        )}\n        <button onClick={submitOrder}>주문하기</button>\n      </div>\n      {paymentResult && <p>{paymentResult}</p>}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}