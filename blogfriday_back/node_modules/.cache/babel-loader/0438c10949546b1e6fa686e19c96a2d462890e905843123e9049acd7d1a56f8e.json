{"ast":null,"code":"import axios from \"axios\";\nimport { chatRoomReducers } from \"../reducers/chatReducer\";\nimport { useDispatch } from \"react-router-dom\";\n//친구추가\n\nfunction getFriendInsert(user_id2) {\n  return async dispatch => {\n    await axios.post(`/api/chat/friendinsert`, user_id2).then(response => {\n      const data = response.data;\n      console.log(data);\n      alert(data);\n      return data;\n    }).catch(error => {\n      console.log(error);\n      alert(\"친구추가실패\");\n    });\n  };\n}\n\n//친구목록\nfunction getFriendList(user_id1) {\n  return async dispatch => {\n    const data = await axios.get(`/api/chat/friendlist/${user_id1}`).then(Response => Response.data);\n    console.log(\"Map\", data);\n    dispatch(chatRoomReducers.getFriendList(data));\n  };\n}\nfunction getNLPsearch(text) {\n  return async dispatch => {\n    try {\n      // 줄바꿈 문자 제거 또는 변환\n      text = text.replace(/\\n/g, \" \");\n\n      // 특수 문자 제거 (필요한 경우)\n      text = text.replace(/[^a-zA-Z0-9ㄱ-ㅎㅏ-ㅣ가-힣\\s]/g, \"\");\n      const response = await axios.post(`/api/ai/predict/${encodeURIComponent(text)}`);\n      const data = response.data;\n      console.log(\"NLP 예측 결과:\", data);\n\n      // 예측 결과를 사용하여 필요한 작업 수행\n      const predictedProductName = data.predictedProductName;\n      if (predictedProductName && predictedProductName.trim() !== \"\") {\n        const keyword = predictedProductName;\n        const searchUrl = `https://search.wemakeprice.com/search?keyword=${encodeURIComponent(keyword)}`;\n\n        // 검색 결과 페이지로 이동\n        window.open(searchUrl, \"_blank\");\n      } else {\n        console.log(\"예측 결과가 없습니다.\");\n      }\n\n      // 필요한 경우 리듀서를 호출하여 상태 업데이트\n      // dispatch(chatRoomReducers.updatePredictedProductName(predictedProductName));\n    } catch (error) {\n      console.error(\"NLP 예측 오류:\", error);\n      // 오류 처리\n    }\n  };\n}\nfunction getNLPsearch1(text) {\n  return async dispatch => {\n    try {\n      const response = await axios.post(`http://localhost:5000/predict`, {\n        text: text\n      });\n      const data = response.data;\n      console.log(\"NLP 예측 결과:\", data);\n      const predictedProductName = data.predictedProductName;\n      if (predictedProductName && predictedProductName.trim() !== \"\") {\n        const keyword = predictedProductName;\n        const searchUrl = `http://112.169.231.62:3030/search/${encodeURIComponent(keyword)}`;\n        window.open(searchUrl, \"_blank\");\n      } else {\n        console.log(\"예측 결과가 없습니다.\");\n      }\n    } catch (error) {\n      console.error(\"NLP 예측 오류:\", error);\n    }\n  };\n}\nexport const chatActions = {\n  getFriendInsert,\n  getFriendList,\n  getNLPsearch,\n  getNLPsearch1\n};","map":{"version":3,"names":["axios","chatRoomReducers","useDispatch","getFriendInsert","user_id2","dispatch","post","then","response","data","console","log","alert","catch","error","getFriendList","user_id1","get","Response","getNLPsearch","text","replace","encodeURIComponent","predictedProductName","trim","keyword","searchUrl","window","open","getNLPsearch1","chatActions"],"sources":["D:/ai_chat/react-workspace/blogfriday/src/toolkit/actions/chat_Action.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { chatRoomReducers } from \"../reducers/chatReducer\";\r\nimport { useDispatch } from \"react-router-dom\";\r\n//친구추가\r\n\r\nfunction getFriendInsert(user_id2) {\r\n  return async (dispatch) => {\r\n    await axios\r\n      .post(`/api/chat/friendinsert`, user_id2)\r\n      .then((response) => {\r\n        const data = response.data;\r\n        console.log(data);\r\n        alert(data);\r\n        return data;\r\n      })\r\n\r\n      .catch((error) => {\r\n        console.log(error);\r\n        alert(\"친구추가실패\");\r\n      });\r\n  };\r\n}\r\n\r\n//친구목록\r\nfunction getFriendList(user_id1) {\r\n  return async (dispatch) => {\r\n    const data = await axios\r\n      .get(`/api/chat/friendlist/${user_id1}`)\r\n      .then((Response) => Response.data);\r\n    console.log(\"Map\", data);\r\n\r\n    dispatch(chatRoomReducers.getFriendList(data));\r\n  };\r\n}\r\n\r\nfunction getNLPsearch(text) {\r\n  return async (dispatch) => {\r\n    try {\r\n      // 줄바꿈 문자 제거 또는 변환\r\n      text = text.replace(/\\n/g, \" \");\r\n\r\n      // 특수 문자 제거 (필요한 경우)\r\n      text = text.replace(/[^a-zA-Z0-9ㄱ-ㅎㅏ-ㅣ가-힣\\s]/g, \"\");\r\n\r\n      const response = await axios.post(\r\n        `/api/ai/predict/${encodeURIComponent(text)}`\r\n      );\r\n      const data = response.data;\r\n      console.log(\"NLP 예측 결과:\", data);\r\n\r\n      // 예측 결과를 사용하여 필요한 작업 수행\r\n      const predictedProductName = data.predictedProductName;\r\n\r\n      if (predictedProductName && predictedProductName.trim() !== \"\") {\r\n        const keyword = predictedProductName;\r\n        const searchUrl = `https://search.wemakeprice.com/search?keyword=${encodeURIComponent(\r\n          keyword\r\n        )}`;\r\n\r\n        // 검색 결과 페이지로 이동\r\n        window.open(searchUrl, \"_blank\");\r\n      } else {\r\n        console.log(\"예측 결과가 없습니다.\");\r\n      }\r\n\r\n      // 필요한 경우 리듀서를 호출하여 상태 업데이트\r\n      // dispatch(chatRoomReducers.updatePredictedProductName(predictedProductName));\r\n    } catch (error) {\r\n      console.error(\"NLP 예측 오류:\", error);\r\n      // 오류 처리\r\n    }\r\n  };\r\n}\r\n\r\nfunction getNLPsearch1(text) {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await axios.post(`http://localhost:5000/predict`, {\r\n        text: text,\r\n      });\r\n      const data = response.data;\r\n      console.log(\"NLP 예측 결과:\", data);\r\n\r\n      const predictedProductName = data.predictedProductName;\r\n      if (predictedProductName && predictedProductName.trim() !== \"\") {\r\n        const keyword = predictedProductName;\r\n        const searchUrl = `http://112.169.231.62:3030/search/${encodeURIComponent(\r\n          keyword\r\n        )}`;\r\n        window.open(searchUrl, \"_blank\");\r\n      } else {\r\n        console.log(\"예측 결과가 없습니다.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"NLP 예측 오류:\", error);\r\n    }\r\n  };\r\n}\r\n\r\nexport const chatActions = {\r\n  getFriendInsert,\r\n  getFriendList,\r\n  getNLPsearch,\r\n  getNLPsearch1,\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}