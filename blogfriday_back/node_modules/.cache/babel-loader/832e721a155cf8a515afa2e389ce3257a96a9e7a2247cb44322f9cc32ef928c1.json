{"ast":null,"code":"var _jsxFileName = \"D:\\\\ai_chat\\\\react-workspace\\\\blogfriday\\\\src\\\\components\\\\chat\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./Chat.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { chatActions } from \"../../toolkit/actions/chat_Action\";\nimport axios from \"axios\";\nimport PredictedLabelsButtons from \"./PredictedLabelsButtons\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Chat() {\n  _s();\n  const [webSocket, setWebSocket] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState(\"\");\n  const [userId, setUserId] = useState(\"CCC\");\n\n  // view 0,1 사용및 사용시 택한 유저 저장\n  const [view, setView] = useState(0); // (0: 친구 목록, 1: 채팅)\n  const [recipientId, setRecipientId] = useState(\"\"); //id\n  const [recipientProfile, setRecipientProfile] = useState(\"\"); //프로필\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  //sql timestamp형식과 호환이 잘안되어서 String으로 타입변환후 정해진 시간 형식에 맞게 재조정\n  const timestamp = formatMySQLDateTime();\n  function formatMySQLDateTime() {\n    const now = new Date();\n    return now.getFullYear() + \"-\" + (\"0\" + (now.getMonth() + 1)).slice(-2) + \"-\" + (\"0\" + now.getDate()).slice(-2) + \" \" + (\"0\" + now.getHours()).slice(-2) + \":\" + (\"0\" + now.getMinutes()).slice(-2) + \":\" + (\"0\" + now.getSeconds()).slice(-2);\n  }\n  const connect = () => {\n    if (!webSocket || webSocket.readyState === WebSocket.CLOSED) {\n      const ws = new WebSocket(`ws://112.169.231.62:8090/ws/chat?userId=${localStorage.getItem(\"user_code\")}`);\n      ws.onopen = () => console.log(\"Connected to the chat server\");\n      ws.onmessage = event => {\n        const message = JSON.parse(event.data);\n        setMessages(prevMessages => [...prevMessages, message]);\n      };\n      ws.onerror = event => console.error(\"WebSocket error:\", event);\n      ws.onclose = event => console.log(\"WebSocket connection closed:\", event);\n      setWebSocket(ws);\n    } else {\n      console.log(\"WebSocket is already connected or connecting.\");\n    }\n  };\n  const sendMessage = () => {\n    if (webSocket && inputMessage !== \"\" && localStorage.getItem(\"user_code\") !== \"\" && recipientId !== \"\") {\n      const messageData = {\n        sender_id: localStorage.getItem(\"user_code\"),\n        message: inputMessage,\n        recipient_id: recipientId,\n        timestamp: new Date().toISOString()\n      };\n      webSocket.send(JSON.stringify(messageData));\n      setMessages(prevMessages => [...prevMessages, messageData]);\n      setInputMessage(\"\");\n    }\n  };\n  const disconnect = () => {\n    if (webSocket) {\n      webSocket.close();\n    }\n  };\n  const {\n    friendList\n  } = useSelector(state => state.chat);\n  const [userCode, setUserCode] = useState({\n    user_code1: localStorage.getItem(\"user_code\"),\n    user_code2: \"\"\n  });\n  const navihome = () => {\n    navigate(\"/chat/home\");\n  };\n  const navidot = () => {\n    navigate(\"/chat/dot\");\n  };\n  const naviset = () => {\n    navigate(\"/chat/set\");\n  };\n  const navishop = () => {\n    navigate(\"/shophome\");\n  };\n  useEffect(() => {\n    connect();\n    dispatch(chatActions.getFriendList(userCode.user_code1));\n  }, [userCode]);\n  const [showOptions, setShowOptions] = useState(false);\n  const [optionsPosition, setOptionsPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const [selectedMessage, setSelectedMessage] = useState(null);\n  const handleMsgClick = (msg, event) => {\n    event.stopPropagation(); // 상위로 이벤트 간섭 방지\n    const x = event.clientX;\n    const y = event.clientY;\n    setOptionsPosition({\n      x,\n      y\n    });\n    setShowOptions(true);\n    setSelectedMessage(msg);\n  };\n  const hiddenDivStyle = {\n    position: \"absolute\",\n    left: `${optionsPosition.x}px`,\n    top: `${optionsPosition.y}px`,\n    display: showOptions ? \"block\" : \"none\"\n  };\n  useEffect(() => {\n    const handleClickOutside = () => setShowOptions(false);\n    if (showOptions) {\n      window.addEventListener(\"click\", handleClickOutside);\n    }\n    return () => window.removeEventListener(\"click\", handleClickOutside);\n  }, [showOptions]);\n  const nlpsearch = text => {\n    dispatch(chatActions.getNLPsearch(text));\n  };\n  const [recipientName, setRecipientName] = useState(\"\");\n  const updateRecipientName = () => {\n    const friend = friendList.find(friend => friend.user_code === recipientId);\n    if (friend) {\n      setRecipientName(friend.user_name);\n    }\n  };\n  useEffect(() => {\n    if (recipientId) {\n      updateRecipientName();\n    }\n  }, [recipientId, friendList]);\n  const messageEndRef = useRef(null);\n  useEffect(() => {\n    var _messageEndRef$curren;\n    const element = (_messageEndRef$curren = messageEndRef.current) === null || _messageEndRef$curren === void 0 ? void 0 : _messageEndRef$curren.parentNode;\n    if (element) {\n      element.scrollTop = element.scrollHeight;\n    }\n  }, [messages]);\n  const findLastMessage = user_code => {\n    const relevantMessages = messages.filter(msg => msg.sender_id === localStorage.getItem(\"user_code\") && msg.recipient_id === user_code || msg.sender_id === user_code && msg.recipient_id === localStorage.getItem(\"user_code\"));\n    return relevantMessages[relevantMessages.length - 1]; // 가장 최근 메시지 반환\n  };\n  const deleteMessage = () => {\n    if (selectedMessage) {\n      const {\n        timestamp\n      } = selectedMessage; // 선택된 메시지의 timestamp\n\n      console.log(`Deleting message with timestamp: ${timestamp}`);\n      axios.delete(`/api/chat/deletemessage/${timestamp}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [view === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat_menubar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"blank0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat_menubar_button_f\",\n          onClick: navihome\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat_menubar_button_c_c\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat_menubar_button_d\",\n          onClick: navidot\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat_menubar_button_shop\",\n          onClick: navishop\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat_menubar_button_s\",\n          onClick: naviset\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat_body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat_header\",\n          children: \"\\uCC44\\uD305\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat_friendlist\",\n            children: friendList && friendList.map(chat => {\n              const lastMessage = findLastMessage(chat.user_code); // 각 친구의 최근 메시지 검색\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chat_friendbox\",\n                onClick: () => {\n                  if (!webSocket || webSocket.readyState === WebSocket.CLOSED) {\n                    connect(); // Reconnect if disconnected\n                  }\n                  setRecipientId(chat.user_code);\n                  setView(1);\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"chat_profileimg\",\n                  src: chat.user_profile ? `/profileimages/${chat.user_profile}` : \"/basicicon/no-profile.png\",\n                  alt: \"\\uBE44\\uC5B4\\uC788\\uC74C\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"chat_name\",\n                  children: chat.user_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"chat_last_message\",\n                  children: lastMessage ? lastMessage.message : \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 25\n                }, this)]\n              }, chat.user_id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 23\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }, this), view === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat_o\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat_talkbox\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: recipientName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setView(0);\n          },\n          children: \"\\uB4A4\\uB85C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: messages.filter(msg => msg.sender_id === localStorage.getItem(\"user_code\") && msg.recipient_id === recipientId || msg.sender_id === recipientId && msg.recipient_id === localStorage.getItem(\"user_code\")).map((msg, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `message ${msg.sender_id === localStorage.getItem(\"user_code\") ? \"my-message\" : \"other-message\"}`,\n            onClick: e => handleMsgClick(msg, e),\n            children: [msg.sender_id === localStorage.getItem(\"user_code\") ? \"\" : msg.sender_id === \"system\" ? \"\" : `${recipientName}: `, msg.message]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: hiddenDivStyle,\n          className: \"optionsDiv\",\n          children: [selectedMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"clickinstance\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                console.log(`작업 실행: ${selectedMessage.message}`);\n                nlpsearch(selectedMessage.message);\n              },\n              children: [\"\\uC120\\uD0DD\\uD55C \\uBA54\\uC138\\uC9C0: \", selectedMessage.message]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                console.log(`작업 실행: ${selectedMessage.message}`);\n                nlpsearch(selectedMessage.message);\n              },\n              children: [\"\\uC120\\uD0DD\\uD55C \\uBA54\\uC138\\uC9C0: \", selectedMessage.message]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                console.log(`작업 실행: ${selectedMessage.message}`);\n                nlpsearch(selectedMessage.message);\n              },\n              children: [\"\\uC120\\uD0DD\\uD55C \\uBA54\\uC138\\uC9C0: \", selectedMessage.message]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: deleteMessage,\n              children: \"\\uC0AD\\uC81C\\uD558\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(PredictedLabelsButtons, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat_message\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"chat_input_message\",\n          type: \"text\",\n          value: inputMessage,\n          onChange: e => setInputMessage(e.target.value),\n          onKeyPress: e => e.key === \"Enter\" && sendMessage()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          disabled: !inputMessage.trim() || !localStorage.getItem(\"user_code\").trim() || !recipientId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(Chat, \"iFvBqL8K2LvtzCoEgLtE/272bkw=\", false, function () {\n  return [useNavigate, useDispatch, useSelector];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","useDispatch","useSelector","chatActions","axios","PredictedLabelsButtons","jsxDEV","_jsxDEV","Fragment","_Fragment","Chat","_s","webSocket","setWebSocket","messages","setMessages","inputMessage","setInputMessage","userId","setUserId","view","setView","recipientId","setRecipientId","recipientProfile","setRecipientProfile","navigate","dispatch","timestamp","formatMySQLDateTime","now","Date","getFullYear","getMonth","slice","getDate","getHours","getMinutes","getSeconds","connect","readyState","WebSocket","CLOSED","ws","localStorage","getItem","onopen","console","log","onmessage","event","message","JSON","parse","data","prevMessages","onerror","error","onclose","sendMessage","messageData","sender_id","recipient_id","toISOString","send","stringify","disconnect","close","friendList","state","chat","userCode","setUserCode","user_code1","user_code2","navihome","navidot","naviset","navishop","getFriendList","showOptions","setShowOptions","optionsPosition","setOptionsPosition","x","y","selectedMessage","setSelectedMessage","handleMsgClick","msg","stopPropagation","clientX","clientY","hiddenDivStyle","position","left","top","display","handleClickOutside","window","addEventListener","removeEventListener","nlpsearch","text","getNLPsearch","recipientName","setRecipientName","updateRecipientName","friend","find","user_code","user_name","messageEndRef","_messageEndRef$curren","element","current","parentNode","scrollTop","scrollHeight","findLastMessage","relevantMessages","filter","length","deleteMessage","delete","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","lastMessage","src","user_profile","alt","user_id","index","e","style","type","value","onChange","target","onKeyPress","key","disabled","trim","_c","$RefreshReg$"],"sources":["D:/ai_chat/react-workspace/blogfriday/src/components/chat/Chat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./Chat.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { chatActions } from \"../../toolkit/actions/chat_Action\";\r\nimport axios from \"axios\";\r\nimport PredictedLabelsButtons from \"./PredictedLabelsButtons\";\r\n\r\nfunction Chat() {\r\n  const [webSocket, setWebSocket] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [inputMessage, setInputMessage] = useState(\"\");\r\n  const [userId, setUserId] = useState(\"CCC\");\r\n\r\n  // view 0,1 사용및 사용시 택한 유저 저장\r\n  const [view, setView] = useState(0); // (0: 친구 목록, 1: 채팅)\r\n  const [recipientId, setRecipientId] = useState(\"\"); //id\r\n  const [recipientProfile, setRecipientProfile] = useState(\"\"); //프로필\r\n\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  //sql timestamp형식과 호환이 잘안되어서 String으로 타입변환후 정해진 시간 형식에 맞게 재조정\r\n  const timestamp = formatMySQLDateTime();\r\n  function formatMySQLDateTime() {\r\n    const now = new Date();\r\n    return (\r\n      now.getFullYear() +\r\n      \"-\" +\r\n      (\"0\" + (now.getMonth() + 1)).slice(-2) +\r\n      \"-\" +\r\n      (\"0\" + now.getDate()).slice(-2) +\r\n      \" \" +\r\n      (\"0\" + now.getHours()).slice(-2) +\r\n      \":\" +\r\n      (\"0\" + now.getMinutes()).slice(-2) +\r\n      \":\" +\r\n      (\"0\" + now.getSeconds()).slice(-2)\r\n    );\r\n  }\r\n\r\n  const connect = () => {\r\n    if (!webSocket || webSocket.readyState === WebSocket.CLOSED) {\r\n      const ws = new WebSocket(\r\n        `ws://112.169.231.62:8090/ws/chat?userId=${localStorage.getItem(\r\n          \"user_code\"\r\n        )}`\r\n      );\r\n      ws.onopen = () => console.log(\"Connected to the chat server\");\r\n      ws.onmessage = (event) => {\r\n        const message = JSON.parse(event.data);\r\n        setMessages((prevMessages) => [...prevMessages, message]);\r\n      };\r\n      ws.onerror = (event) => console.error(\"WebSocket error:\", event);\r\n      ws.onclose = (event) =>\r\n        console.log(\"WebSocket connection closed:\", event);\r\n      setWebSocket(ws);\r\n    } else {\r\n      console.log(\"WebSocket is already connected or connecting.\");\r\n    }\r\n  };\r\n\r\n  const sendMessage = () => {\r\n    if (\r\n      webSocket &&\r\n      inputMessage !== \"\" &&\r\n      localStorage.getItem(\"user_code\") !== \"\" &&\r\n      recipientId !== \"\"\r\n    ) {\r\n      const messageData = {\r\n        sender_id: localStorage.getItem(\"user_code\"),\r\n        message: inputMessage,\r\n        recipient_id: recipientId,\r\n        timestamp: new Date().toISOString(),\r\n      };\r\n      webSocket.send(JSON.stringify(messageData));\r\n      setMessages((prevMessages) => [...prevMessages, messageData]);\r\n      setInputMessage(\"\");\r\n    }\r\n  };\r\n\r\n  const disconnect = () => {\r\n    if (webSocket) {\r\n      webSocket.close();\r\n    }\r\n  };\r\n\r\n  const { friendList } = useSelector((state) => state.chat);\r\n\r\n  const [userCode, setUserCode] = useState({\r\n    user_code1: localStorage.getItem(\"user_code\"),\r\n    user_code2: \"\",\r\n  });\r\n\r\n  const navihome = () => {\r\n    navigate(\"/chat/home\");\r\n  };\r\n\r\n  const navidot = () => {\r\n    navigate(\"/chat/dot\");\r\n  };\r\n\r\n  const naviset = () => {\r\n    navigate(\"/chat/set\");\r\n  };\r\n\r\n  const navishop = () => {\r\n    navigate(\"/shophome\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    connect();\r\n    dispatch(chatActions.getFriendList(userCode.user_code1));\r\n  }, [userCode]);\r\n\r\n  const [showOptions, setShowOptions] = useState(false);\r\n  const [optionsPosition, setOptionsPosition] = useState({ x: 0, y: 0 });\r\n  const [selectedMessage, setSelectedMessage] = useState(null);\r\n\r\n  const handleMsgClick = (msg, event) => {\r\n    event.stopPropagation(); // 상위로 이벤트 간섭 방지\r\n    const x = event.clientX;\r\n    const y = event.clientY;\r\n\r\n    setOptionsPosition({ x, y });\r\n    setShowOptions(true);\r\n    setSelectedMessage(msg);\r\n  };\r\n\r\n  const hiddenDivStyle = {\r\n    position: \"absolute\",\r\n    left: `${optionsPosition.x}px`,\r\n    top: `${optionsPosition.y}px`,\r\n    display: showOptions ? \"block\" : \"none\",\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = () => setShowOptions(false);\r\n    if (showOptions) {\r\n      window.addEventListener(\"click\", handleClickOutside);\r\n    }\r\n    return () => window.removeEventListener(\"click\", handleClickOutside);\r\n  }, [showOptions]);\r\n\r\n  const nlpsearch = (text) => {\r\n    dispatch(chatActions.getNLPsearch(text));\r\n  };\r\n\r\n  const [recipientName, setRecipientName] = useState(\"\");\r\n\r\n  const updateRecipientName = () => {\r\n    const friend = friendList.find(\r\n      (friend) => friend.user_code === recipientId\r\n    );\r\n    if (friend) {\r\n      setRecipientName(friend.user_name);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (recipientId) {\r\n      updateRecipientName();\r\n    }\r\n  }, [recipientId, friendList]);\r\n\r\n  const messageEndRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const element = messageEndRef.current?.parentNode;\r\n    if (element) {\r\n      element.scrollTop = element.scrollHeight;\r\n    }\r\n  }, [messages]);\r\n\r\n  const findLastMessage = (user_code) => {\r\n    const relevantMessages = messages.filter(\r\n      (msg) =>\r\n        (msg.sender_id === localStorage.getItem(\"user_code\") &&\r\n          msg.recipient_id === user_code) ||\r\n        (msg.sender_id === user_code &&\r\n          msg.recipient_id === localStorage.getItem(\"user_code\"))\r\n    );\r\n    return relevantMessages[relevantMessages.length - 1]; // 가장 최근 메시지 반환\r\n  };\r\n\r\n  const deleteMessage = () => {\r\n    if (selectedMessage) {\r\n      const { timestamp } = selectedMessage; // 선택된 메시지의 timestamp\r\n\r\n      console.log(`Deleting message with timestamp: ${timestamp}`);\r\n      axios.delete(`/api/chat/deletemessage/${timestamp}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {view === 0 && (\r\n        <div className=\"chat\">\r\n          <div className=\"chat_menubar\">\r\n            <div className=\"blank0\"></div>\r\n            <div className=\"chat_menubar_button_f\" onClick={navihome}></div>\r\n            <div className=\"chat_menubar_button_c_c\"></div>\r\n            <div className=\"chat_menubar_button_d\" onClick={navidot}></div>\r\n            <div className=\"chat_menubar_button_shop\" onClick={navishop}></div>\r\n            <div className=\"chat_menubar_button_s\" onClick={naviset}></div>\r\n          </div>\r\n          <div className=\"chat_body\">\r\n            <div className=\"chat_header\">채팅</div>\r\n            <div>\r\n              <div className=\"chat_friendlist\">\r\n                {friendList &&\r\n                  friendList.map((chat) => {\r\n                    const lastMessage = findLastMessage(chat.user_code); // 각 친구의 최근 메시지 검색\r\n                    return (\r\n                      <div\r\n                        className=\"chat_friendbox\"\r\n                        key={chat.user_id}\r\n                        onClick={() => {\r\n                          if (\r\n                            !webSocket ||\r\n                            webSocket.readyState === WebSocket.CLOSED\r\n                          ) {\r\n                            connect(); // Reconnect if disconnected\r\n                          }\r\n                          setRecipientId(chat.user_code);\r\n                          setView(1);\r\n                        }}\r\n                      >\r\n                        <img\r\n                          className=\"chat_profileimg\"\r\n                          src={\r\n                            chat.user_profile\r\n                              ? `/profileimages/${chat.user_profile}`\r\n                              : \"/basicicon/no-profile.png\"\r\n                          }\r\n                          alt=\"비어있음\"\r\n                        ></img>\r\n                        <div className=\"chat_name\">{chat.user_name}</div>\r\n                        <div className=\"chat_last_message\">\r\n                          {lastMessage ? lastMessage.message : \"\"}\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {view === 1 && (\r\n        <div className=\"chat_o\">\r\n          <div className=\"chat_talkbox\">\r\n            <div>{recipientName}</div>\r\n            <button\r\n              onClick={() => {\r\n                setView(0);\r\n              }}\r\n            >\r\n              뒤로\r\n            </button>\r\n            <ul>\r\n              {messages\r\n                .filter(\r\n                  (msg) =>\r\n                    (msg.sender_id === localStorage.getItem(\"user_code\") &&\r\n                      msg.recipient_id === recipientId) ||\r\n                    (msg.sender_id === recipientId &&\r\n                      msg.recipient_id === localStorage.getItem(\"user_code\"))\r\n                )\r\n                .map((msg, index) => (\r\n                  <li\r\n                    key={index}\r\n                    className={`message ${\r\n                      msg.sender_id === localStorage.getItem(\"user_code\")\r\n                        ? \"my-message\"\r\n                        : \"other-message\"\r\n                    }`}\r\n                    onClick={(e) => handleMsgClick(msg, e)}\r\n                  >\r\n                    {msg.sender_id === localStorage.getItem(\"user_code\")\r\n                      ? \"\"\r\n                      : msg.sender_id === \"system\"\r\n                      ? \"\"\r\n                      : `${recipientName}: `}\r\n                    {msg.message}\r\n                  </li>\r\n                ))}\r\n            </ul>\r\n            <div style={hiddenDivStyle} className=\"optionsDiv\">\r\n              {selectedMessage && (\r\n                <div className=\"clickinstance\">\r\n                  <button\r\n                    onClick={() => {\r\n                      console.log(`작업 실행: ${selectedMessage.message}`);\r\n                      nlpsearch(selectedMessage.message);\r\n                    }}\r\n                  >\r\n                    선택한 메세지: {selectedMessage.message}\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      console.log(`작업 실행: ${selectedMessage.message}`);\r\n                      nlpsearch(selectedMessage.message);\r\n                    }}\r\n                  >\r\n                    선택한 메세지: {selectedMessage.message}\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      console.log(`작업 실행: ${selectedMessage.message}`);\r\n                      nlpsearch(selectedMessage.message);\r\n                    }}\r\n                  >\r\n                    선택한 메세지: {selectedMessage.message}\r\n                  </button>\r\n                  <button onClick={deleteMessage}>삭제하기</button>\r\n                </div>\r\n              )}\r\n              <PredictedLabelsButtons />\r\n            </div>\r\n          </div>\r\n          <div className=\"chat_message\">\r\n            <input\r\n              className=\"chat_input_message\"\r\n              type=\"text\"\r\n              value={inputMessage}\r\n              onChange={(e) => setInputMessage(e.target.value)}\r\n              onKeyPress={(e) => e.key === \"Enter\" && sendMessage()}\r\n            />\r\n\r\n            <button\r\n              onClick={sendMessage}\r\n              disabled={\r\n                !inputMessage.trim() ||\r\n                !localStorage.getItem(\"user_code\").trim() ||\r\n                !recipientId\r\n              }\r\n            ></button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}