{"ast":null,"code":"var _jsxFileName = \"D:\\\\ai_chat\\\\react-workspace\\\\blogfriday\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import \"./App.css\";\n\n// const API_URL = \"http://localhost:8090\";\n\n// const App = () => {\n//   const [Orders, setOrderInfo] = useState({\n//     deliveryAddress: \"\",\n//     deliveryInstruction: \"\",\n//     quantity: 1,\n//   });\n//   const [product, setProduct] = useState(null);\n//   const [paymentResult, setPaymentResult] = useState(\"\");\n\n//   useEffect(() => {\n//     const fetchProduct = async () => {\n//       try {\n//         const response = await axios.get(`${API_URL}/api/product/content/3`);\n//         setProduct(response.data);\n//       } catch (error) {\n//         console.error(\"Error fetching product:\", error);\n//       }\n//     };\n//     fetchProduct();\n//   }, []);\n\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setOrderInfo((prev) => ({ ...prev, [name]: value }));\n//   };\n\n//   const handleQuantityChange = (e) => {\n//     setOrderInfo((prev) => ({\n//       ...prev,\n//       quantity: parseInt(e.target.value, 10) || 1,\n//     }));\n//   };\n\n//   const submitOrder = async () => {\n//     try {\n//       const orderAmount = product.product_price * Orders.quantity;\n//       const response = await axios.post(`${API_URL}/api/orders`, {\n//         ...Orders,\n//         products: [\n//           { productId: product.product_code, quantity: Orders.quantity },\n//         ],\n//         orderAmount,\n//       });\n//       if (response.status === 200) {\n//         setPaymentResult(\"주문이 성공적으로 처리되었습니다.\");\n//       } else {\n//         setPaymentResult(\"주문 처리에 실패했습니다.\");\n//       }\n//     } catch (error) {\n//       console.error(\"주문 처리 중 오류가 발생했습니다.\", error);\n//       setPaymentResult(\"주문 처리 중 오류가 발생했습니다.\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"app\">\n//       <div className=\"order-form\">\n//         <h2>주문 및 결제</h2>\n//         <input\n//           type=\"text\"\n//           name=\"deliveryAddress\"\n//           placeholder=\"배송지\"\n//           value={Orders.deliveryAddress}\n//           onChange={handleInputChange}\n//         />\n//         <input\n//           type=\"text\"\n//           name=\"recipient\"\n//           placeholder=\"받는 사람\"\n//           value={Orders.recipient}\n//           onChange={handleInputChange}\n//         />\n//         <input\n//           type=\"text\"\n//           name=\"deliveryInstruction\"\n//           placeholder=\"배송 요청사항\"\n//           value={Orders.deliveryInstruction}\n//           onChange={handleInputChange}\n//         />\n\n//         {product && (\n//           <div className=\"product-info\">\n//             <h3>상품 정보</h3>\n//             <p>제품명: {product.product_name}</p>\n//             <p>가격: {product.product_price}원</p>\n//             <label>\n//               수량 선택:\n//               <input\n//                 type=\"number\"\n//                 name=\"quantity\"\n//                 value={Orders.quantity}\n//                 onChange={handleQuantityChange}\n//               />\n//             </label>\n//             <p>총 금액: ${product.product_price * Orders.quantity}</p>\n//           </div>\n//         )}\n//         <button onClick={submitOrder}>주문하기</button>\n//       </div>\n//       {paymentResult && <p>{paymentResult}</p>}\n//     </div>\n//   );\n// };\n\n// export default App;\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\n// 백엔드 서버 주소\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:8090\";\nconst App = () => {\n  _s();\n  const [product, setProduct] = useState({});\n  const [orderInfo, setOrderInfo] = useState({\n    deliveryAddress: \"\",\n    deliveryInstruction: \"\",\n    quantity: 1\n  });\n  const [paymentResult, setPaymentResult] = useState(\"\");\n  useEffect(() => {\n    // 상품 정보 불러오기\n    const fetchProduct = async () => {\n      try {\n        const response = await axios.get(`${API_URL}/api/product/content/3`);\n        setProduct(response.data);\n      } catch (error) {\n        console.error(\"상품 정보를 불러오는 중 오류 발생:\", error);\n        setPaymentResult(\"상품 정보를 불러오는 중 오류가 발생했습니다.\");\n      }\n    };\n    fetchProduct();\n  }, []);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setOrderInfo(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleQuantityChange = e => {\n    setOrderInfo(prev => ({\n      ...prev,\n      quantity: parseInt(e.target.value, 10) || 1\n    }));\n  };\n  const submitOrder = async () => {\n    const orderData = {\n      deliveryAddress: orderInfo.deliveryAddress,\n      deliveryInstruction: orderInfo.deliveryInstruction,\n      products: [{\n        productId: product.product_code,\n        // product_code 확인\n        quantity: orderInfo.quantity\n      }],\n      orderAmount: product.product_price * orderInfo.quantity // 계산된 총 주문 금액\n    };\n    try {\n      const response = await axios.post(`${API_URL}/api/orders`, orderData);\n      if (response.status === 201) {\n        setPaymentResult(\"주문이 성공적으로 처리되었습니다.\");\n      }\n    } catch (error) {\n      console.error(\"주문 처리 중 오류 발생:\", error);\n      setPaymentResult(\"주문 처리 중 오류가 발생했습니다.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uC8FC\\uBB38 \\uBC0F \\uACB0\\uC81C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-info\",\n      children: product.product_name && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: product.product_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uAC00\\uACA9: \", product.product_price, \"\\uC6D0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uC218\\uB7C9 \\uC120\\uD0DD:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: orderInfo.quantity,\n            onChange: handleQuantityChange,\n            min: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uCD1D \\uAE08\\uC561: \", product.product_price * orderInfo.quantity, \"\\uC6D0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"deliveryAddress\",\n        value: orderInfo.deliveryAddress,\n        onChange: handleChange,\n        placeholder: \"\\uBC30\\uC1A1\\uC9C0 \\uC8FC\\uC18C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"deliveryInstruction\",\n        value: orderInfo.deliveryInstruction,\n        onChange: handleChange,\n        placeholder: \"\\uBC30\\uC1A1 \\uC694\\uCCAD\\uC0AC\\uD56D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: submitOrder,\n        children: \"\\uC8FC\\uBB38\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), paymentResult && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: paymentResult\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"kSzL0axM3WbLt15VAVKjdWzajXg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","API_URL","App","_s","product","setProduct","orderInfo","setOrderInfo","deliveryAddress","deliveryInstruction","quantity","paymentResult","setPaymentResult","fetchProduct","response","get","data","error","console","handleChange","e","name","value","target","prev","handleQuantityChange","parseInt","submitOrder","orderData","products","productId","product_code","orderAmount","product_price","post","status","className","children","fileName","_jsxFileName","lineNumber","columnNumber","product_name","type","onChange","min","placeholder","onClick","_c","$RefreshReg$"],"sources":["D:/ai_chat/react-workspace/blogfriday/src/App.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import \"./App.css\";\n\n// const API_URL = \"http://localhost:8090\";\n\n// const App = () => {\n//   const [Orders, setOrderInfo] = useState({\n//     deliveryAddress: \"\",\n//     deliveryInstruction: \"\",\n//     quantity: 1,\n//   });\n//   const [product, setProduct] = useState(null);\n//   const [paymentResult, setPaymentResult] = useState(\"\");\n\n//   useEffect(() => {\n//     const fetchProduct = async () => {\n//       try {\n//         const response = await axios.get(`${API_URL}/api/product/content/3`);\n//         setProduct(response.data);\n//       } catch (error) {\n//         console.error(\"Error fetching product:\", error);\n//       }\n//     };\n//     fetchProduct();\n//   }, []);\n\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setOrderInfo((prev) => ({ ...prev, [name]: value }));\n//   };\n\n//   const handleQuantityChange = (e) => {\n//     setOrderInfo((prev) => ({\n//       ...prev,\n//       quantity: parseInt(e.target.value, 10) || 1,\n//     }));\n//   };\n\n//   const submitOrder = async () => {\n//     try {\n//       const orderAmount = product.product_price * Orders.quantity;\n//       const response = await axios.post(`${API_URL}/api/orders`, {\n//         ...Orders,\n//         products: [\n//           { productId: product.product_code, quantity: Orders.quantity },\n//         ],\n//         orderAmount,\n//       });\n//       if (response.status === 200) {\n//         setPaymentResult(\"주문이 성공적으로 처리되었습니다.\");\n//       } else {\n//         setPaymentResult(\"주문 처리에 실패했습니다.\");\n//       }\n//     } catch (error) {\n//       console.error(\"주문 처리 중 오류가 발생했습니다.\", error);\n//       setPaymentResult(\"주문 처리 중 오류가 발생했습니다.\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"app\">\n//       <div className=\"order-form\">\n//         <h2>주문 및 결제</h2>\n//         <input\n//           type=\"text\"\n//           name=\"deliveryAddress\"\n//           placeholder=\"배송지\"\n//           value={Orders.deliveryAddress}\n//           onChange={handleInputChange}\n//         />\n//         <input\n//           type=\"text\"\n//           name=\"recipient\"\n//           placeholder=\"받는 사람\"\n//           value={Orders.recipient}\n//           onChange={handleInputChange}\n//         />\n//         <input\n//           type=\"text\"\n//           name=\"deliveryInstruction\"\n//           placeholder=\"배송 요청사항\"\n//           value={Orders.deliveryInstruction}\n//           onChange={handleInputChange}\n//         />\n\n//         {product && (\n//           <div className=\"product-info\">\n//             <h3>상품 정보</h3>\n//             <p>제품명: {product.product_name}</p>\n//             <p>가격: {product.product_price}원</p>\n//             <label>\n//               수량 선택:\n//               <input\n//                 type=\"number\"\n//                 name=\"quantity\"\n//                 value={Orders.quantity}\n//                 onChange={handleQuantityChange}\n//               />\n//             </label>\n//             <p>총 금액: ${product.product_price * Orders.quantity}</p>\n//           </div>\n//         )}\n//         <button onClick={submitOrder}>주문하기</button>\n//       </div>\n//       {paymentResult && <p>{paymentResult}</p>}\n//     </div>\n//   );\n// };\n\n// export default App;\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\n// 백엔드 서버 주소\nconst API_URL = \"http://localhost:8090\";\n\nconst App = () => {\n  const [product, setProduct] = useState({});\n  const [orderInfo, setOrderInfo] = useState({\n    deliveryAddress: \"\",\n    deliveryInstruction: \"\",\n    quantity: 1,\n  });\n  const [paymentResult, setPaymentResult] = useState(\"\");\n\n  useEffect(() => {\n    // 상품 정보 불러오기\n    const fetchProduct = async () => {\n      try {\n        const response = await axios.get(`${API_URL}/api/product/content/3`);\n        setProduct(response.data);\n      } catch (error) {\n        console.error(\"상품 정보를 불러오는 중 오류 발생:\", error);\n        setPaymentResult(\"상품 정보를 불러오는 중 오류가 발생했습니다.\");\n      }\n    };\n\n    fetchProduct();\n  }, []);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setOrderInfo((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const handleQuantityChange = (e) => {\n    setOrderInfo((prev) => ({\n      ...prev,\n      quantity: parseInt(e.target.value, 10) || 1,\n    }));\n  };\n\n  const submitOrder = async () => {\n    const orderData = {\n      deliveryAddress: orderInfo.deliveryAddress,\n      deliveryInstruction: orderInfo.deliveryInstruction,\n      products: [\n        {\n          productId: product.product_code, // product_code 확인\n          quantity: orderInfo.quantity,\n        },\n      ],\n      orderAmount: product.product_price * orderInfo.quantity, // 계산된 총 주문 금액\n    };\n\n    try {\n      const response = await axios.post(`${API_URL}/api/orders`, orderData);\n      if (response.status === 201) {\n        setPaymentResult(\"주문이 성공적으로 처리되었습니다.\");\n      }\n    } catch (error) {\n      console.error(\"주문 처리 중 오류 발생:\", error);\n      setPaymentResult(\"주문 처리 중 오류가 발생했습니다.\");\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <h2>주문 및 결제</h2>\n      <div className=\"product-info\">\n        {product.product_name && (\n          <>\n            <h3>{product.product_name}</h3>\n            <p>가격: {product.product_price}원</p>\n            <p>\n              수량 선택:\n              <input\n                type=\"number\"\n                value={orderInfo.quantity}\n                onChange={handleQuantityChange}\n                min=\"1\"\n              />\n            </p>\n            <p>총 금액: {product.product_price * orderInfo.quantity}원</p>\n          </>\n        )}\n      </div>\n      <div>\n        <input\n          type=\"text\"\n          name=\"deliveryAddress\"\n          value={orderInfo.deliveryAddress}\n          onChange={handleChange}\n          placeholder=\"배송지 주소\"\n        />\n        <input\n          type=\"text\"\n          name=\"deliveryInstruction\"\n          value={orderInfo.deliveryInstruction}\n          onChange={handleChange}\n          placeholder=\"배송 요청사항\"\n        />\n        <button onClick={submitOrder}>주문하기</button>\n      </div>\n      {paymentResult && <p>{paymentResult}</p>}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}